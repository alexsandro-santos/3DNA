import unittest
from unittest.mock import patch
from dna.genetic_algorithm import *
from dna.RotTable import RotTable
import random
from copy import deepcopy

class TestGeneticAlgorithm(unittest.TestCase):
    def test_populate(self):
        rot_table = RotTable()
        seq = "AAAGGATCTTCTTGAGATCCTTTTTTTCTGCGCGTAATCTGCTGCCAGTAAACGAAAAAACCGCCTGGGGAGGCGGTTTAGTCGAAGGTTAAGTCAGTTGGGGACTGCTTAACCGGGTAACTGGCTTGGTGGAGCACAGATACCAAATACTGTCCTTCTAGTGTAGCCGCAGTTAGGCCACCACTTCAAGAACTCTTAATATCTCAATCCACCTTGTCCAGTTACCAGTGGCTGCTGCCAGTGGCGCTTTGTCGTGTCTTACCGGGTTGGACTCAAGACGATAGTTACCGGATAAGGCGCAGCGGTCGGGCTGAACGGGGGGTTCGTGCACACAGCCCAGCTTGGAGCGAACGACCTACACCGAGCCGAGATACCTACAGCGTGAGCTATGAGAAAGCGCCACGCTTCCCGAAGGGAGAAAGGCGGACAGGTATCCGGTAAGCGGCAGGGTCGGAACAGGAGAGCGCACGAGGGAGCTTCCAGGGGGAAACGCCTGGTATCTTTATAGTCCTGTCGGGTTTCGCCACCTCTGACTTGAGCGTCGATTTTTATGATGCTCGTCAGGGGGGCGGAGCCTATGGAAAAACGCCAACGGCGCAGCCTTTTCCTGGTTCTCGTTTTTTGCTCACATGTTTCTTTTGGCGTTATCCCCTGATTCTGTGGATAACCGCATCTCCGCTTTTGAGTGAGCAGACACCGCTCGCCGCAGCCGAACGACCGAGTGTAGCGAGTCAGTGAGCGAGGAAGCGGAAGAGCGCCGGAACGTGCATTTTCTCCTTACGCATCTGTGCGGCATTTCACATCGGACATGGTGCGCTTTCCATACAATTCGTACTGATGCCGCATAGTTAAGCCAGTATACACTCCGCTATCGCTACGTGACTGGTTCAGGGCTTCGCCCCGAAACCCCCTGACGCGCCCTGAGGGGCTTGTCTGCTCCCGGCATCCGCTCACAGACAAGCTGTTACCGTCTCCGGGAGCTGTATGTGTCAGAGGTTTTCACCGTCATCCCCGAAGCGTGCGAGGCAGCTGCGGTAAAGCTCGTCGGCGTGGTCGTGAAGTGATTCACAAATATCGGCCTGTTCATCTGCGTCCAGTTCGTTGAGTTTCTCCAGCAGCGTTAATGTCTGGCTTCTGATAAAACGGGCCATGTTAAGGGCGGTTTTTTCCTGTTTAGTCACTGATGCCTCCGTGTAAGGGGGATTTCTGTTTTATGGGGTAATGATACCGATGAAACGCGAGAGGATGCTCACCATACGGGTTACTGATGATGAACATGCCCGGTTACTGGAACGCTGTGAGGGTAAACAGCTGGCGGTATGGATGCGGCGGGTCTGCCTGGGTGAGCCGGTTGCACGCTCCGGGAAGCTGCCGACACTGGCACCGCCGTTACTGCGTCAGCTGGCCGCCATCGGGAATAACCTGAATCAGACAGCGAGGAAGGTGAACAGCGGGCAGTGGTCTTCCGGTGATCGGGTTCAGGTGTTGGCTGCGCTGATGGCCATCGGGGAGGAGCTGCGTCGGCTGCGTCTGGCCGTCAGGGAACAGGGCGCGCGGGATGATTGTTAAATTTCATGCCAGGGGAAAAGGCGGTGGCAGTGGTCCGGTTGATTACCTGCTGGGAAGGGAGCGAAACCGGGAAGGGGCAACGGTGCTTCAGGGTAATCCGGAAGAAGTCCGGGAACTCATCGATGCCACGCCATTTGCGAAGAAATACACGTCAGGTGTTCTGTCGTTCGCGGAGAAGGAGCTGCCGCCGGGAGGACGTGAAAAGGTGATGGCGAGCTTTGAGCGTGTACTGATGCCCGGTCTCGAAAAGAATCAGTACAGCATCCTGTGGGTGGAGCACCAGGACAAGGGACGGCTTGAGCTGAATTTTGTCATTCCGAACATGGAGCTACAGACCGGAAAACGCCTCCAGCCGTACTACGACCGGGCAGACAGGCCGAGAATTGATGCCTGGCAGACGCTGGTGAATCACCATTACGGGCTGCATGACCCCAACGCCCCGGAGAACCGCCGGATACTGACTCTCCCTGATAACCTGCCGGAAACGAAACAGGCGCTTGCAGAGAGCGTCACACGCGGGATAGACGCTCTTTATCATGTCGGGGAGATAAAAGGTCGTCAGGATGTGATTCAGGCGCTCACAGAGGCAGGGCTTGAAGTGGTCAGGGTGATGCGAAGCAGTATCAGCATTGCAGACCCGAACGGTGGGAAGAATATCAGGCTGAAAGGAGCATTTTATGAGCAATCTTTTACAGACGGGCGCGGAGTTCGAGAAAAAGCTGAAAGAGAGAGCCGAATCTACAGAGACAATGCTGAACGACGAGTTCAGCAAGCTCGAAAAATCTGTAAGCAAGGCTGTGACATCAAACGAGACGAAAATCAAAGACGCTATAGCCCTGTTCACAGCTTCGACAGAGGAATCACTGAAAAAACACCGGGAAGGGGTGAAAGAGGCGATGATGCAGCACAGGAAGGACGTGTTAAAGCTGGCAGGGAATACGGGCATGATGTTACTGGGGATGGTCCTTTTCCTGTTTACCGTGAGTGGCGGGACGCTCTGGTATCTTGGCGGGATGATACAGGCGAACCTGGAAGAAATCAGGATACAGGAAGAAACATTGCAGAAACTGAACGCGAAGACATGGGGCGTGGAGTTTGTGCAGGACGGGAGAAGGAAATTTCTGGTTATCCCTCAGGGGAAATCGGCAACGGTGATTCCCTATCAGGGGAAGGACTGGGTACAACTGACGGAGTGACACAGAGTGACGGAGCTGGAAAGACATTTGCTGAACGCCTTAGAGCAACTGCAACAGGACTATATGCAGCGGCTGAACGAATGGGAGAGCGCCTTCGTGGAATTGCAGAAAATGTTTTCGCTTACGCAACGGGACAACGCGATGCTGAACGAGCGGGTCATGCAGTTGAGTCAGCAGGTGCAGCACTTGAGCGAGCAGACAGAACGCTTGAGCCAGTTATACAGCGAGAACAGGAGATAAGGGATGAACGGCTGATACAGGAACGCGAACATGAGTTATCCCTGGAGCGTGAGCGCCAGCTGGAAATACAGGAACGGACACAGGATGGCCCTTCGCTGGGATGGTAATCAGAGACAGGCTAAAATGTTGTCAGCGCGTTTCCGGTGCATTTTTTGGGATAATGGTTGGTTCGGGGGCACCGGGAACGCGCTTCAGTCAGACCTTGCTGAAAACACAGGAACGCGTTAAAACGCATACGGGCGCGATTCTGGTGTGTCTTTTGTTGCTGTGTTTTGCCTCTATTGCCAGATCGCGCTCATTCCCCTGAACTTCTGTTTTCCCGCTCCGGTCCCCGTCTTCTTCGCTTCCGAAAGCATGAAAAAAATCCGTTTCAGCTGTCTCTGGCTGGCAATTCCTGCGTGATTCACATGGCTGCATAGCTATGCATGTGGTTAAAATTTACCGGGTGCGATCGCGGCAGTTTTTCGGGTGGTTTGTTGCCATTTTTACCTGTCTGCTGCCGTGATCGCGCCGAACGCGTTTCAGCGGTGCGTACAATAAGGGATTATGGTAAATTATCTTGTTCCTTAGAGAATGATTTGAGGTGGTATCCTGCACTTATTTAAATATGCTTGCTTGGGAAATTCCAGGTTGCAGTATGGTTGAGTTGTAATTTTCCTATGATAGGAAAAATGTTATATTATTAATTTATTTGTGAGGCTTCATAAAGAATGAAAATTTCTGATATTGAAAAAAACATATATAAAGGACTAGCTGAATTTATTTCACAAAAAATCAGAGATGAACATGATATATGCCTTGGACAGTTTGAATCAGAGGAATTACTTGATGAGATTCTTAAAAGAGTAATCCCAGTCATATATAATGTGGCTATTGATGATGCTATAAAATCAGTAAGGAATGTTGGGGATAGATTAGAGGAGGAATTAGATATGAGGAAGGTAGTGTGACTAATTTTAAATCAGACTTAAATCTAATAAGAAAAGAATGGTATAATGCATTTTATTCAGGTAATACTGAAATGCTAGATTACTTGGAAGCTGATTGGTTTATTTCAACAAATGGTCAAAAAGTTATCTATAAAAAACATCAGTTACGAAAGATTGATATGCGTCCAGCGAGGATTTTACCTAGCATAGAAAGATATGAATATGAGGTCGTAATGCGTGAGTTTAAAGGCATTGCTTGTGTTTCAGGGAAAGCTGAAATAAAGCAAAATGATGGAAATATATTAATGGCTTTTATTGAGAATTGGATAAAGGTTAATGGTGGATGGAAAATGCAGTTTATATCGTATGAAAAAATCTAAGGGGAAGCCCCCTTAGATTAATGGTTATATATGTTCAAGTTTTATTTTTTTATAGCGATAAGTTCTGCTTTGAGCTTTAAGCATGTTTTCTGCAAACTGAATATCAAAACTATTTATAGCATTAGTTATTATAGTTTTTATTTTTTCTTTATCAGATAATGAATCACCATGCTCTATAGGTTCCCGCATATATGGATTGTTTTTTAATTCATCAAATAATGTTTTAAATAGTTCTAATCGACGAGGTCTTATAACTGTAAAAGATATATGAAGAGAGTGTTTGCTCTGAGTCGTAACATTGTGCCAGTATCCAGCAGGAAGATATATGGCCTGACCTGGGGTTATATCAAACTCATAATCTGGGGAGGTATTAGGTGGTAGATAATCGAAGCTTCTTTCATCTTCGAGAGGGTATGAATAGGTAGGGTTGTAAACTTTCCATTTTTTTATTCCCTCAATTTGAACAGCTATTACATCATGATTGTCAAAATGAAGCCCAAAGCTTGGTGTTGCTGTAAATGCAGCATATAGATTAGCACTACATGTACATTCTAACTCTTTAGATAACCATAGTCTGCTTTCATCTACAGATTCAAAGAATGACTGGCATCGATCTACTATAAGGGTTGCGCCATCACGTAAGCATTTATATAGCTGATGGCGATTTATATGTGGTGTTCTATCGCCTGTTTGGCTATATGTGTATCTTATAAATCCTTTATACCCCCTAATTTCGGGAAAGTTGTCATTTGCCATTCTAACTCTAGGATAGTGCAATATATCTTTTTCAAGCAATTTATTAAGATCATTCCAGTTGATTAAGTTTTTATAATTAACATCCGTGAATACAAACGGATATTTCTGGAAATTATATTTCTTAAATTTTTCTATGATTTCCTTTTTTATAAGATTATTCATTTTTAAACCTCATGTTTTGTGATATCTATAATCTGTGCTTTAGGTATATTATTTATAAGTTGTTCATCATGAGATATAACAATGATATGCTTTTCCTTGTTTTCCTCTTTTATATAATCACTGATTATTTTTATACCAAGTGAATCAAACCCTTTTGTCGGTTCATCGAAAATAATCAAGTCTACGTTTTTTCCAGATGTAAGAGATACTCCTAATTTTTGTTTTTGTCCACCAGATAAATTATGTCCGTAACCTTTGATCTCATAATCTAGTGGTTTGTCGAACTTAAATCTGTGTAGCAGCTTTTTAATTGTATTTAAATTATTAATGCCGGAATAATGTAATATATTTTCCTCTATAGTTCCAGGCATGAGATCTAGATCTTGAGGAACGTATAAGACATTAACAAAAGGAGAATTTGCTTTTTCTTGTTGTATCCCATTGATTTTTATTGTGTTTTCTTCTGTTGTTATATTGCCAGAGAGAATTTTTGCAATAGTTGTTTTTCCCGAACCATTCTCACCGGTTATAAAGGTAACAACGCCTTTTGTTAATATTAATTTATGGTTGAATGATTTGTTGTATATTTCAATATTGCAAATATTGTCTTTTACATGAAGATATTGCTTGTCTGTGTAATTTGTTTTTTTTATGTCGTTTATTTCGGCACAGTATAAATCAATTTCTGTTCTTGCCATTTTTATTTGTCTAAATAGATAACCAATGCGATTTAATGGGAGAAAAACTTGGAATAAAAAAGTGGCAAGCATAATAATACTACCACGGCTTGCTCTACCATGAAGAAACATCCAGTATGCTGATAGGATAATCAGACTACTAAAAATGACTGAAAGAAAAGCGGAGCTGATACCAAACAGGAAAAATTCATTATTTACTTTTCTTTGTTTTTCTGAATGTGTATTTACAGCTTGAATTACTCGTTTACGACTTTTATCCGTGGTATGGAAAGCTTTATCCATAGGATACATGTGCATCATATCAAACATTCTTCCAGATGCGAATTTGGAGCTAAGTGCAACTGATTTCATCATTGGAAATCTACGTTGTGTCATTTTTATGACAAATATTATATAGATTGCCATTATTATTATAAACTCAATGGCTATTAATGTATTAACACTTATACAAATTGTTATGATTATTCCAATCATTTGTATTAATAATGGTACTACATCAGAACATATTGTATAAAATAATGATGATGCAGAAGAAAGCATGCTTTCTATAACCTTATTTAGTTCTCCTTTATTTTTCTTTAAAAAATGCTCTTGGTGAGAATTTTGTATATTATCAATAACTTGCTCTCTAAGCTTTACAGATAATTCTATATTTGTTTTTTGAGTCAAGTATTCCGATATGCTATATCCAGCAGGCATAAGGAATCTAATTGATAAGAAACATGCTATAAATATTAATAATGAGTTTATTTCTCCTATTGAATCTTTATTGTCAATAACTGTTTTTATTAAATATCCGAATAGAACGAAAAGAAAACTACTTATAGTTGATAATAATATAATAAAAAACAAATTACATTTATTAAATGTGATGATGTACTTTTCAATAAAATTCAATTTATAATCCTTAAAGCCCGTATATTACGGGCTTTATGTTATCTAGAATTACATGAGCACCCAGCGCCACATCCTTTACCGCTGCAACCACAAACAGAACCATTATCATTCCAAACATCTTTTCGCATTATTATTTTTACAAATTCTGCGGCTGGAAGGTGAGTGATACTCTTTACTTTTTCGATGTAAGAATCACTGGATATGGATTCTTTTGGAATTCTTATAGTATTAATGTTCTTTATGCTGTATCTTACAGCATAATCACCATACCACTTTGCGACAGTTTCATGACCTAGGTAAAAAGCGATTTTTTCAATTTGATTTTTATATTCGTTAAAACGATATTCTTGGAATGTTATACCATGCTCATTAACATGCCTTATCTCATTTTTTAGCATGTCATTTGTATTTGGATAATGGTGGAGGTAAGCACCAAGATATTTTTCACAAAAGCTGGTATAAGCATCTGTAAATTGAATAAACGTATGCCACATTTCATCTATAATTTGTAATTGCTCGTGAACTTTTATATTGTAGCATTCCGTTAGGCATGTTGAGGCTAGCCAGATGAATTTCTTTGTTTCATTAAAGATATCATCAGCTTCTTCTGGTGTTACATTCCATTCTTTACGAAATTTTAGAAGAACATCATCATTGTGATAACTCATGATATCTTCTAATGAGCTAACATTATGAACTTTTGCATAAGAACTGCTGTTCATCTTATGTTGTAGCATAACACCCCCAATTATATATTTGAATGTAGATGAGAATAGTTATCATTTGTTATGGTATTGTTAAATTTGTGCTTGTGTCAATATGCCTAATTCTATAAATGAGATAGTAATCAAGTTTTTTAATGGTTATAGGATCCATTAGTAATACAAGGTTTTTGCAGCCAGTTTTTACGGGTAGGGGCTGCAAGGAAAACAAAATTTTCCCACTCTAAGAGAAGAGAATTGAGTTGGTTGAATGAGTGGATGCATCTAGGGCCGCTAATTCACCGAGTGTAAAGGCTGTACGAAATGTGTTGCAGTCCGATAATAGCCCCCTCCATTGACGTTTTACACATGTGTTGTAGGTTCCAGGAGTGGGCGGATCTCAAAAAGATC"
        traj = Traj3D()
        population_size1 = 10
        gen_alg1 = GeneticAlgorithm(population_size1, rot_table, None, seq, traj)
        self.assertEqual(len(gen_alg1.population), population_size1)
        for table in gen_alg1.population:
            self.assertIsNotNone(table)
            for row in table.getTable().values():
                self.assertIsNotNone(row)
        
        population_size2 = 50
        gen_alg2 = GeneticAlgorithm(population_size2, rot_table, None, seq, traj)
        self.assertEqual(len(gen_alg2.population), population_size2)
        for table in gen_alg2.population:
            self.assertIsNotNone(table)
            for row in table.getTable().values():
                self.assertIsNotNone(row)
                
    def test_evaluate(self): 
        rot_table = RotTable()
        seq = "AAAGGATCTTCTTGAGATCCTTTTTTTCTGCGCGTAATCTGCTGCCAGTAAACGAAAAAACCGCCTGGGGAGGCGGTTTAGTCGAAGGTTAAGTCAGTTGGGGACTGCTTAACCGGGTAACTGGCTTGGTGGAGCACAGATACCAAATACTGTCCTTCTAGTGTAGCCGCAGTTAGGCCACCACTTCAAGAACTCTTAATATCTCAATCCACCTTGTCCAGTTACCAGTGGCTGCTGCCAGTGGCGCTTTGTCGTGTCTTACCGGGTTGGACTCAAGACGATAGTTACCGGATAAGGCGCAGCGGTCGGGCTGAACGGGGGGTTCGTGCACACAGCCCAGCTTGGAGCGAACGACCTACACCGAGCCGAGATACCTACAGCGTGAGCTATGAGAAAGCGCCACGCTTCCCGAAGGGAGAAAGGCGGACAGGTATCCGGTAAGCGGCAGGGTCGGAACAGGAGAGCGCACGAGGGAGCTTCCAGGGGGAAACGCCTGGTATCTTTATAGTCCTGTCGGGTTTCGCCACCTCTGACTTGAGCGTCGATTTTTATGATGCTCGTCAGGGGGGCGGAGCCTATGGAAAAACGCCAACGGCGCAGCCTTTTCCTGGTTCTCGTTTTTTGCTCACATGTTTCTTTTGGCGTTATCCCCTGATTCTGTGGATAACCGCATCTCCGCTTTTGAGTGAGCAGACACCGCTCGCCGCAGCCGAACGACCGAGTGTAGCGAGTCAGTGAGCGAGGAAGCGGAAGAGCGCCGGAACGTGCATTTTCTCCTTACGCATCTGTGCGGCATTTCACATCGGACATGGTGCGCTTTCCATACAATTCGTACTGATGCCGCATAGTTAAGCCAGTATACACTCCGCTATCGCTACGTGACTGGTTCAGGGCTTCGCCCCGAAACCCCCTGACGCGCCCTGAGGGGCTTGTCTGCTCCCGGCATCCGCTCACAGACAAGCTGTTACCGTCTCCGGGAGCTGTATGTGTCAGAGGTTTTCACCGTCATCCCCGAAGCGTGCGAGGCAGCTGCGGTAAAGCTCGTCGGCGTGGTCGTGAAGTGATTCACAAATATCGGCCTGTTCATCTGCGTCCAGTTCGTTGAGTTTCTCCAGCAGCGTTAATGTCTGGCTTCTGATAAAACGGGCCATGTTAAGGGCGGTTTTTTCCTGTTTAGTCACTGATGCCTCCGTGTAAGGGGGATTTCTGTTTTATGGGGTAATGATACCGATGAAACGCGAGAGGATGCTCACCATACGGGTTACTGATGATGAACATGCCCGGTTACTGGAACGCTGTGAGGGTAAACAGCTGGCGGTATGGATGCGGCGGGTCTGCCTGGGTGAGCCGGTTGCACGCTCCGGGAAGCTGCCGACACTGGCACCGCCGTTACTGCGTCAGCTGGCCGCCATCGGGAATAACCTGAATCAGACAGCGAGGAAGGTGAACAGCGGGCAGTGGTCTTCCGGTGATCGGGTTCAGGTGTTGGCTGCGCTGATGGCCATCGGGGAGGAGCTGCGTCGGCTGCGTCTGGCCGTCAGGGAACAGGGCGCGCGGGATGATTGTTAAATTTCATGCCAGGGGAAAAGGCGGTGGCAGTGGTCCGGTTGATTACCTGCTGGGAAGGGAGCGAAACCGGGAAGGGGCAACGGTGCTTCAGGGTAATCCGGAAGAAGTCCGGGAACTCATCGATGCCACGCCATTTGCGAAGAAATACACGTCAGGTGTTCTGTCGTTCGCGGAGAAGGAGCTGCCGCCGGGAGGACGTGAAAAGGTGATGGCGAGCTTTGAGCGTGTACTGATGCCCGGTCTCGAAAAGAATCAGTACAGCATCCTGTGGGTGGAGCACCAGGACAAGGGACGGCTTGAGCTGAATTTTGTCATTCCGAACATGGAGCTACAGACCGGAAAACGCCTCCAGCCGTACTACGACCGGGCAGACAGGCCGAGAATTGATGCCTGGCAGACGCTGGTGAATCACCATTACGGGCTGCATGACCCCAACGCCCCGGAGAACCGCCGGATACTGACTCTCCCTGATAACCTGCCGGAAACGAAACAGGCGCTTGCAGAGAGCGTCACACGCGGGATAGACGCTCTTTATCATGTCGGGGAGATAAAAGGTCGTCAGGATGTGATTCAGGCGCTCACAGAGGCAGGGCTTGAAGTGGTCAGGGTGATGCGAAGCAGTATCAGCATTGCAGACCCGAACGGTGGGAAGAATATCAGGCTGAAAGGAGCATTTTATGAGCAATCTTTTACAGACGGGCGCGGAGTTCGAGAAAAAGCTGAAAGAGAGAGCCGAATCTACAGAGACAATGCTGAACGACGAGTTCAGCAAGCTCGAAAAATCTGTAAGCAAGGCTGTGACATCAAACGAGACGAAAATCAAAGACGCTATAGCCCTGTTCACAGCTTCGACAGAGGAATCACTGAAAAAACACCGGGAAGGGGTGAAAGAGGCGATGATGCAGCACAGGAAGGACGTGTTAAAGCTGGCAGGGAATACGGGCATGATGTTACTGGGGATGGTCCTTTTCCTGTTTACCGTGAGTGGCGGGACGCTCTGGTATCTTGGCGGGATGATACAGGCGAACCTGGAAGAAATCAGGATACAGGAAGAAACATTGCAGAAACTGAACGCGAAGACATGGGGCGTGGAGTTTGTGCAGGACGGGAGAAGGAAATTTCTGGTTATCCCTCAGGGGAAATCGGCAACGGTGATTCCCTATCAGGGGAAGGACTGGGTACAACTGACGGAGTGACACAGAGTGACGGAGCTGGAAAGACATTTGCTGAACGCCTTAGAGCAACTGCAACAGGACTATATGCAGCGGCTGAACGAATGGGAGAGCGCCTTCGTGGAATTGCAGAAAATGTTTTCGCTTACGCAACGGGACAACGCGATGCTGAACGAGCGGGTCATGCAGTTGAGTCAGCAGGTGCAGCACTTGAGCGAGCAGACAGAACGCTTGAGCCAGTTATACAGCGAGAACAGGAGATAAGGGATGAACGGCTGATACAGGAACGCGAACATGAGTTATCCCTGGAGCGTGAGCGCCAGCTGGAAATACAGGAACGGACACAGGATGGCCCTTCGCTGGGATGGTAATCAGAGACAGGCTAAAATGTTGTCAGCGCGTTTCCGGTGCATTTTTTGGGATAATGGTTGGTTCGGGGGCACCGGGAACGCGCTTCAGTCAGACCTTGCTGAAAACACAGGAACGCGTTAAAACGCATACGGGCGCGATTCTGGTGTGTCTTTTGTTGCTGTGTTTTGCCTCTATTGCCAGATCGCGCTCATTCCCCTGAACTTCTGTTTTCCCGCTCCGGTCCCCGTCTTCTTCGCTTCCGAAAGCATGAAAAAAATCCGTTTCAGCTGTCTCTGGCTGGCAATTCCTGCGTGATTCACATGGCTGCATAGCTATGCATGTGGTTAAAATTTACCGGGTGCGATCGCGGCAGTTTTTCGGGTGGTTTGTTGCCATTTTTACCTGTCTGCTGCCGTGATCGCGCCGAACGCGTTTCAGCGGTGCGTACAATAAGGGATTATGGTAAATTATCTTGTTCCTTAGAGAATGATTTGAGGTGGTATCCTGCACTTATTTAAATATGCTTGCTTGGGAAATTCCAGGTTGCAGTATGGTTGAGTTGTAATTTTCCTATGATAGGAAAAATGTTATATTATTAATTTATTTGTGAGGCTTCATAAAGAATGAAAATTTCTGATATTGAAAAAAACATATATAAAGGACTAGCTGAATTTATTTCACAAAAAATCAGAGATGAACATGATATATGCCTTGGACAGTTTGAATCAGAGGAATTACTTGATGAGATTCTTAAAAGAGTAATCCCAGTCATATATAATGTGGCTATTGATGATGCTATAAAATCAGTAAGGAATGTTGGGGATAGATTAGAGGAGGAATTAGATATGAGGAAGGTAGTGTGACTAATTTTAAATCAGACTTAAATCTAATAAGAAAAGAATGGTATAATGCATTTTATTCAGGTAATACTGAAATGCTAGATTACTTGGAAGCTGATTGGTTTATTTCAACAAATGGTCAAAAAGTTATCTATAAAAAACATCAGTTACGAAAGATTGATATGCGTCCAGCGAGGATTTTACCTAGCATAGAAAGATATGAATATGAGGTCGTAATGCGTGAGTTTAAAGGCATTGCTTGTGTTTCAGGGAAAGCTGAAATAAAGCAAAATGATGGAAATATATTAATGGCTTTTATTGAGAATTGGATAAAGGTTAATGGTGGATGGAAAATGCAGTTTATATCGTATGAAAAAATCTAAGGGGAAGCCCCCTTAGATTAATGGTTATATATGTTCAAGTTTTATTTTTTTATAGCGATAAGTTCTGCTTTGAGCTTTAAGCATGTTTTCTGCAAACTGAATATCAAAACTATTTATAGCATTAGTTATTATAGTTTTTATTTTTTCTTTATCAGATAATGAATCACCATGCTCTATAGGTTCCCGCATATATGGATTGTTTTTTAATTCATCAAATAATGTTTTAAATAGTTCTAATCGACGAGGTCTTATAACTGTAAAAGATATATGAAGAGAGTGTTTGCTCTGAGTCGTAACATTGTGCCAGTATCCAGCAGGAAGATATATGGCCTGACCTGGGGTTATATCAAACTCATAATCTGGGGAGGTATTAGGTGGTAGATAATCGAAGCTTCTTTCATCTTCGAGAGGGTATGAATAGGTAGGGTTGTAAACTTTCCATTTTTTTATTCCCTCAATTTGAACAGCTATTACATCATGATTGTCAAAATGAAGCCCAAAGCTTGGTGTTGCTGTAAATGCAGCATATAGATTAGCACTACATGTACATTCTAACTCTTTAGATAACCATAGTCTGCTTTCATCTACAGATTCAAAGAATGACTGGCATCGATCTACTATAAGGGTTGCGCCATCACGTAAGCATTTATATAGCTGATGGCGATTTATATGTGGTGTTCTATCGCCTGTTTGGCTATATGTGTATCTTATAAATCCTTTATACCCCCTAATTTCGGGAAAGTTGTCATTTGCCATTCTAACTCTAGGATAGTGCAATATATCTTTTTCAAGCAATTTATTAAGATCATTCCAGTTGATTAAGTTTTTATAATTAACATCCGTGAATACAAACGGATATTTCTGGAAATTATATTTCTTAAATTTTTCTATGATTTCCTTTTTTATAAGATTATTCATTTTTAAACCTCATGTTTTGTGATATCTATAATCTGTGCTTTAGGTATATTATTTATAAGTTGTTCATCATGAGATATAACAATGATATGCTTTTCCTTGTTTTCCTCTTTTATATAATCACTGATTATTTTTATACCAAGTGAATCAAACCCTTTTGTCGGTTCATCGAAAATAATCAAGTCTACGTTTTTTCCAGATGTAAGAGATACTCCTAATTTTTGTTTTTGTCCACCAGATAAATTATGTCCGTAACCTTTGATCTCATAATCTAGTGGTTTGTCGAACTTAAATCTGTGTAGCAGCTTTTTAATTGTATTTAAATTATTAATGCCGGAATAATGTAATATATTTTCCTCTATAGTTCCAGGCATGAGATCTAGATCTTGAGGAACGTATAAGACATTAACAAAAGGAGAATTTGCTTTTTCTTGTTGTATCCCATTGATTTTTATTGTGTTTTCTTCTGTTGTTATATTGCCAGAGAGAATTTTTGCAATAGTTGTTTTTCCCGAACCATTCTCACCGGTTATAAAGGTAACAACGCCTTTTGTTAATATTAATTTATGGTTGAATGATTTGTTGTATATTTCAATATTGCAAATATTGTCTTTTACATGAAGATATTGCTTGTCTGTGTAATTTGTTTTTTTTATGTCGTTTATTTCGGCACAGTATAAATCAATTTCTGTTCTTGCCATTTTTATTTGTCTAAATAGATAACCAATGCGATTTAATGGGAGAAAAACTTGGAATAAAAAAGTGGCAAGCATAATAATACTACCACGGCTTGCTCTACCATGAAGAAACATCCAGTATGCTGATAGGATAATCAGACTACTAAAAATGACTGAAAGAAAAGCGGAGCTGATACCAAACAGGAAAAATTCATTATTTACTTTTCTTTGTTTTTCTGAATGTGTATTTACAGCTTGAATTACTCGTTTACGACTTTTATCCGTGGTATGGAAAGCTTTATCCATAGGATACATGTGCATCATATCAAACATTCTTCCAGATGCGAATTTGGAGCTAAGTGCAACTGATTTCATCATTGGAAATCTACGTTGTGTCATTTTTATGACAAATATTATATAGATTGCCATTATTATTATAAACTCAATGGCTATTAATGTATTAACACTTATACAAATTGTTATGATTATTCCAATCATTTGTATTAATAATGGTACTACATCAGAACATATTGTATAAAATAATGATGATGCAGAAGAAAGCATGCTTTCTATAACCTTATTTAGTTCTCCTTTATTTTTCTTTAAAAAATGCTCTTGGTGAGAATTTTGTATATTATCAATAACTTGCTCTCTAAGCTTTACAGATAATTCTATATTTGTTTTTTGAGTCAAGTATTCCGATATGCTATATCCAGCAGGCATAAGGAATCTAATTGATAAGAAACATGCTATAAATATTAATAATGAGTTTATTTCTCCTATTGAATCTTTATTGTCAATAACTGTTTTTATTAAATATCCGAATAGAACGAAAAGAAAACTACTTATAGTTGATAATAATATAATAAAAAACAAATTACATTTATTAAATGTGATGATGTACTTTTCAATAAAATTCAATTTATAATCCTTAAAGCCCGTATATTACGGGCTTTATGTTATCTAGAATTACATGAGCACCCAGCGCCACATCCTTTACCGCTGCAACCACAAACAGAACCATTATCATTCCAAACATCTTTTCGCATTATTATTTTTACAAATTCTGCGGCTGGAAGGTGAGTGATACTCTTTACTTTTTCGATGTAAGAATCACTGGATATGGATTCTTTTGGAATTCTTATAGTATTAATGTTCTTTATGCTGTATCTTACAGCATAATCACCATACCACTTTGCGACAGTTTCATGACCTAGGTAAAAAGCGATTTTTTCAATTTGATTTTTATATTCGTTAAAACGATATTCTTGGAATGTTATACCATGCTCATTAACATGCCTTATCTCATTTTTTAGCATGTCATTTGTATTTGGATAATGGTGGAGGTAAGCACCAAGATATTTTTCACAAAAGCTGGTATAAGCATCTGTAAATTGAATAAACGTATGCCACATTTCATCTATAATTTGTAATTGCTCGTGAACTTTTATATTGTAGCATTCCGTTAGGCATGTTGAGGCTAGCCAGATGAATTTCTTTGTTTCATTAAAGATATCATCAGCTTCTTCTGGTGTTACATTCCATTCTTTACGAAATTTTAGAAGAACATCATCATTGTGATAACTCATGATATCTTCTAATGAGCTAACATTATGAACTTTTGCATAAGAACTGCTGTTCATCTTATGTTGTAGCATAACACCCCCAATTATATATTTGAATGTAGATGAGAATAGTTATCATTTGTTATGGTATTGTTAAATTTGTGCTTGTGTCAATATGCCTAATTCTATAAATGAGATAGTAATCAAGTTTTTTAATGGTTATAGGATCCATTAGTAATACAAGGTTTTTGCAGCCAGTTTTTACGGGTAGGGGCTGCAAGGAAAACAAAATTTTCCCACTCTAAGAGAAGAGAATTGAGTTGGTTGAATGAGTGGATGCATCTAGGGCCGCTAATTCACCGAGTGTAAAGGCTGTACGAAATGTGTTGCAGTCCGATAATAGCCCCCTCCATTGACGTTTTACACATGTGTTGTAGGTTCCAGGAGTGGGCGGATCTCAAAAAGATC"
        traj = Traj3D()
        a = GeneticAlgorithm(1,rot_table,0.1,seq,traj)
        a.population = [rot_table]
        seq = "AAAGGATCTTCTTGAGATCCTTTTTTTCTGCGCGTAATCTGCTGCCAGTAAACGAAAAAACCGCCTGGGGAGGCGGTTTAGTCGAAGGTTAAGTCAGTTGGGGACTGCTTAACCGGGTAACTGGCTTGGTGGAGCACAGATACCAAATACTGTCCTTCTAGTGTAGCCGCAGTTAGGCCACCACTTCAAGAACTCTTAATATCTCAATCCACCTTGTCCAGTTACCAGTGGCTGCTGCCAGTGGCGCTTTGTCGTGTCTTACCGGGTTGGACTCAAGACGATAGTTACCGGATAAGGCGCAGCGGTCGGGCTGAACGGGGGGTTCGTGCACACAGCCCAGCTTGGAGCGAACGACCTACACCGAGCCGAGATACCTACAGCGTGAGCTATGAGAAAGCGCCACGCTTCCCGAAGGGAGAAAGGCGGACAGGTATCCGGTAAGCGGCAGGGTCGGAACAGGAGAGCGCACGAGGGAGCTTCCAGGGGGAAACGCCTGGTATCTTTATAGTCCTGTCGGGTTTCGCCACCTCTGACTTGAGCGTCGATTTTTATGATGCTCGTCAGGGGGGCGGAGCCTATGGAAAAACGCCAACGGCGCAGCCTTTTCCTGGTTCTCGTTTTTTGCTCACATGTTTCTTTTGGCGTTATCCCCTGATTCTGTGGATAACCGCATCTCCGCTTTTGAGTGAGCAGACACCGCTCGCCGCAGCCGAACGACCGAGTGTAGCGAGTCAGTGAGCGAGGAAGCGGAAGAGCGCCGGAACGTGCATTTTCTCCTTACGCATCTGTGCGGCATTTCACATCGGACATGGTGCGCTTTCCATACAATTCGTACTGATGCCGCATAGTTAAGCCAGTATACACTCCGCTATCGCTACGTGACTGGTTCAGGGCTTCGCCCCGAAACCCCCTGACGCGCCCTGAGGGGCTTGTCTGCTCCCGGCATCCGCTCACAGACAAGCTGTTACCGTCTCCGGGAGCTGTATGTGTCAGAGGTTTTCACCGTCATCCCCGAAGCGTGCGAGGCAGCTGCGGTAAAGCTCGTCGGCGTGGTCGTGAAGTGATTCACAAATATCGGCCTGTTCATCTGCGTCCAGTTCGTTGAGTTTCTCCAGCAGCGTTAATGTCTGGCTTCTGATAAAACGGGCCATGTTAAGGGCGGTTTTTTCCTGTTTAGTCACTGATGCCTCCGTGTAAGGGGGATTTCTGTTTTATGGGGTAATGATACCGATGAAACGCGAGAGGATGCTCACCATACGGGTTACTGATGATGAACATGCCCGGTTACTGGAACGCTGTGAGGGTAAACAGCTGGCGGTATGGATGCGGCGGGTCTGCCTGGGTGAGCCGGTTGCACGCTCCGGGAAGCTGCCGACACTGGCACCGCCGTTACTGCGTCAGCTGGCCGCCATCGGGAATAACCTGAATCAGACAGCGAGGAAGGTGAACAGCGGGCAGTGGTCTTCCGGTGATCGGGTTCAGGTGTTGGCTGCGCTGATGGCCATCGGGGAGGAGCTGCGTCGGCTGCGTCTGGCCGTCAGGGAACAGGGCGCGCGGGATGATTGTTAAATTTCATGCCAGGGGAAAAGGCGGTGGCAGTGGTCCGGTTGATTACCTGCTGGGAAGGGAGCGAAACCGGGAAGGGGCAACGGTGCTTCAGGGTAATCCGGAAGAAGTCCGGGAACTCATCGATGCCACGCCATTTGCGAAGAAATACACGTCAGGTGTTCTGTCGTTCGCGGAGAAGGAGCTGCCGCCGGGAGGACGTGAAAAGGTGATGGCGAGCTTTGAGCGTGTACTGATGCCCGGTCTCGAAAAGAATCAGTACAGCATCCTGTGGGTGGAGCACCAGGACAAGGGACGGCTTGAGCTGAATTTTGTCATTCCGAACATGGAGCTACAGACCGGAAAACGCCTCCAGCCGTACTACGACCGGGCAGACAGGCCGAGAATTGATGCCTGGCAGACGCTGGTGAATCACCATTACGGGCTGCATGACCCCAACGCCCCGGAGAACCGCCGGATACTGACTCTCCCTGATAACCTGCCGGAAACGAAACAGGCGCTTGCAGAGAGCGTCACACGCGGGATAGACGCTCTTTATCATGTCGGGGAGATAAAAGGTCGTCAGGATGTGATTCAGGCGCTCACAGAGGCAGGGCTTGAAGTGGTCAGGGTGATGCGAAGCAGTATCAGCATTGCAGACCCGAACGGTGGGAAGAATATCAGGCTGAAAGGAGCATTTTATGAGCAATCTTTTACAGACGGGCGCGGAGTTCGAGAAAAAGCTGAAAGAGAGAGCCGAATCTACAGAGACAATGCTGAACGACGAGTTCAGCAAGCTCGAAAAATCTGTAAGCAAGGCTGTGACATCAAACGAGACGAAAATCAAAGACGCTATAGCCCTGTTCACAGCTTCGACAGAGGAATCACTGAAAAAACACCGGGAAGGGGTGAAAGAGGCGATGATGCAGCACAGGAAGGACGTGTTAAAGCTGGCAGGGAATACGGGCATGATGTTACTGGGGATGGTCCTTTTCCTGTTTACCGTGAGTGGCGGGACGCTCTGGTATCTTGGCGGGATGATACAGGCGAACCTGGAAGAAATCAGGATACAGGAAGAAACATTGCAGAAACTGAACGCGAAGACATGGGGCGTGGAGTTTGTGCAGGACGGGAGAAGGAAATTTCTGGTTATCCCTCAGGGGAAATCGGCAACGGTGATTCCCTATCAGGGGAAGGACTGGGTACAACTGACGGAGTGACACAGAGTGACGGAGCTGGAAAGACATTTGCTGAACGCCTTAGAGCAACTGCAACAGGACTATATGCAGCGGCTGAACGAATGGGAGAGCGCCTTCGTGGAATTGCAGAAAATGTTTTCGCTTACGCAACGGGACAACGCGATGCTGAACGAGCGGGTCATGCAGTTGAGTCAGCAGGTGCAGCACTTGAGCGAGCAGACAGAACGCTTGAGCCAGTTATACAGCGAGAACAGGAGATAAGGGATGAACGGCTGATACAGGAACGCGAACATGAGTTATCCCTGGAGCGTGAGCGCCAGCTGGAAATACAGGAACGGACACAGGATGGCCCTTCGCTGGGATGGTAATCAGAGACAGGCTAAAATGTTGTCAGCGCGTTTCCGGTGCATTTTTTGGGATAATGGTTGGTTCGGGGGCACCGGGAACGCGCTTCAGTCAGACCTTGCTGAAAACACAGGAACGCGTTAAAACGCATACGGGCGCGATTCTGGTGTGTCTTTTGTTGCTGTGTTTTGCCTCTATTGCCAGATCGCGCTCATTCCCCTGAACTTCTGTTTTCCCGCTCCGGTCCCCGTCTTCTTCGCTTCCGAAAGCATGAAAAAAATCCGTTTCAGCTGTCTCTGGCTGGCAATTCCTGCGTGATTCACATGGCTGCATAGCTATGCATGTGGTTAAAATTTACCGGGTGCGATCGCGGCAGTTTTTCGGGTGGTTTGTTGCCATTTTTACCTGTCTGCTGCCGTGATCGCGCCGAACGCGTTTCAGCGGTGCGTACAATAAGGGATTATGGTAAATTATCTTGTTCCTTAGAGAATGATTTGAGGTGGTATCCTGCACTTATTTAAATATGCTTGCTTGGGAAATTCCAGGTTGCAGTATGGTTGAGTTGTAATTTTCCTATGATAGGAAAAATGTTATATTATTAATTTATTTGTGAGGCTTCATAAAGAATGAAAATTTCTGATATTGAAAAAAACATATATAAAGGACTAGCTGAATTTATTTCACAAAAAATCAGAGATGAACATGATATATGCCTTGGACAGTTTGAATCAGAGGAATTACTTGATGAGATTCTTAAAAGAGTAATCCCAGTCATATATAATGTGGCTATTGATGATGCTATAAAATCAGTAAGGAATGTTGGGGATAGATTAGAGGAGGAATTAGATATGAGGAAGGTAGTGTGACTAATTTTAAATCAGACTTAAATCTAATAAGAAAAGAATGGTATAATGCATTTTATTCAGGTAATACTGAAATGCTAGATTACTTGGAAGCTGATTGGTTTATTTCAACAAATGGTCAAAAAGTTATCTATAAAAAACATCAGTTACGAAAGATTGATATGCGTCCAGCGAGGATTTTACCTAGCATAGAAAGATATGAATATGAGGTCGTAATGCGTGAGTTTAAAGGCATTGCTTGTGTTTCAGGGAAAGCTGAAATAAAGCAAAATGATGGAAATATATTAATGGCTTTTATTGAGAATTGGATAAAGGTTAATGGTGGATGGAAAATGCAGTTTATATCGTATGAAAAAATCTAAGGGGAAGCCCCCTTAGATTAATGGTTATATATGTTCAAGTTTTATTTTTTTATAGCGATAAGTTCTGCTTTGAGCTTTAAGCATGTTTTCTGCAAACTGAATATCAAAACTATTTATAGCATTAGTTATTATAGTTTTTATTTTTTCTTTATCAGATAATGAATCACCATGCTCTATAGGTTCCCGCATATATGGATTGTTTTTTAATTCATCAAATAATGTTTTAAATAGTTCTAATCGACGAGGTCTTATAACTGTAAAAGATATATGAAGAGAGTGTTTGCTCTGAGTCGTAACATTGTGCCAGTATCCAGCAGGAAGATATATGGCCTGACCTGGGGTTATATCAAACTCATAATCTGGGGAGGTATTAGGTGGTAGATAATCGAAGCTTCTTTCATCTTCGAGAGGGTATGAATAGGTAGGGTTGTAAACTTTCCATTTTTTTATTCCCTCAATTTGAACAGCTATTACATCATGATTGTCAAAATGAAGCCCAAAGCTTGGTGTTGCTGTAAATGCAGCATATAGATTAGCACTACATGTACATTCTAACTCTTTAGATAACCATAGTCTGCTTTCATCTACAGATTCAAAGAATGACTGGCATCGATCTACTATAAGGGTTGCGCCATCACGTAAGCATTTATATAGCTGATGGCGATTTATATGTGGTGTTCTATCGCCTGTTTGGCTATATGTGTATCTTATAAATCCTTTATACCCCCTAATTTCGGGAAAGTTGTCATTTGCCATTCTAACTCTAGGATAGTGCAATATATCTTTTTCAAGCAATTTATTAAGATCATTCCAGTTGATTAAGTTTTTATAATTAACATCCGTGAATACAAACGGATATTTCTGGAAATTATATTTCTTAAATTTTTCTATGATTTCCTTTTTTATAAGATTATTCATTTTTAAACCTCATGTTTTGTGATATCTATAATCTGTGCTTTAGGTATATTATTTATAAGTTGTTCATCATGAGATATAACAATGATATGCTTTTCCTTGTTTTCCTCTTTTATATAATCACTGATTATTTTTATACCAAGTGAATCAAACCCTTTTGTCGGTTCATCGAAAATAATCAAGTCTACGTTTTTTCCAGATGTAAGAGATACTCCTAATTTTTGTTTTTGTCCACCAGATAAATTATGTCCGTAACCTTTGATCTCATAATCTAGTGGTTTGTCGAACTTAAATCTGTGTAGCAGCTTTTTAATTGTATTTAAATTATTAATGCCGGAATAATGTAATATATTTTCCTCTATAGTTCCAGGCATGAGATCTAGATCTTGAGGAACGTATAAGACATTAACAAAAGGAGAATTTGCTTTTTCTTGTTGTATCCCATTGATTTTTATTGTGTTTTCTTCTGTTGTTATATTGCCAGAGAGAATTTTTGCAATAGTTGTTTTTCCCGAACCATTCTCACCGGTTATAAAGGTAACAACGCCTTTTGTTAATATTAATTTATGGTTGAATGATTTGTTGTATATTTCAATATTGCAAATATTGTCTTTTACATGAAGATATTGCTTGTCTGTGTAATTTGTTTTTTTTATGTCGTTTATTTCGGCACAGTATAAATCAATTTCTGTTCTTGCCATTTTTATTTGTCTAAATAGATAACCAATGCGATTTAATGGGAGAAAAACTTGGAATAAAAAAGTGGCAAGCATAATAATACTACCACGGCTTGCTCTACCATGAAGAAACATCCAGTATGCTGATAGGATAATCAGACTACTAAAAATGACTGAAAGAAAAGCGGAGCTGATACCAAACAGGAAAAATTCATTATTTACTTTTCTTTGTTTTTCTGAATGTGTATTTACAGCTTGAATTACTCGTTTACGACTTTTATCCGTGGTATGGAAAGCTTTATCCATAGGATACATGTGCATCATATCAAACATTCTTCCAGATGCGAATTTGGAGCTAAGTGCAACTGATTTCATCATTGGAAATCTACGTTGTGTCATTTTTATGACAAATATTATATAGATTGCCATTATTATTATAAACTCAATGGCTATTAATGTATTAACACTTATACAAATTGTTATGATTATTCCAATCATTTGTATTAATAATGGTACTACATCAGAACATATTGTATAAAATAATGATGATGCAGAAGAAAGCATGCTTTCTATAACCTTATTTAGTTCTCCTTTATTTTTCTTTAAAAAATGCTCTTGGTGAGAATTTTGTATATTATCAATAACTTGCTCTCTAAGCTTTACAGATAATTCTATATTTGTTTTTTGAGTCAAGTATTCCGATATGCTATATCCAGCAGGCATAAGGAATCTAATTGATAAGAAACATGCTATAAATATTAATAATGAGTTTATTTCTCCTATTGAATCTTTATTGTCAATAACTGTTTTTATTAAATATCCGAATAGAACGAAAAGAAAACTACTTATAGTTGATAATAATATAATAAAAAACAAATTACATTTATTAAATGTGATGATGTACTTTTCAATAAAATTCAATTTATAATCCTTAAAGCCCGTATATTACGGGCTTTATGTTATCTAGAATTACATGAGCACCCAGCGCCACATCCTTTACCGCTGCAACCACAAACAGAACCATTATCATTCCAAACATCTTTTCGCATTATTATTTTTACAAATTCTGCGGCTGGAAGGTGAGTGATACTCTTTACTTTTTCGATGTAAGAATCACTGGATATGGATTCTTTTGGAATTCTTATAGTATTAATGTTCTTTATGCTGTATCTTACAGCATAATCACCATACCACTTTGCGACAGTTTCATGACCTAGGTAAAAAGCGATTTTTTCAATTTGATTTTTATATTCGTTAAAACGATATTCTTGGAATGTTATACCATGCTCATTAACATGCCTTATCTCATTTTTTAGCATGTCATTTGTATTTGGATAATGGTGGAGGTAAGCACCAAGATATTTTTCACAAAAGCTGGTATAAGCATCTGTAAATTGAATAAACGTATGCCACATTTCATCTATAATTTGTAATTGCTCGTGAACTTTTATATTGTAGCATTCCGTTAGGCATGTTGAGGCTAGCCAGATGAATTTCTTTGTTTCATTAAAGATATCATCAGCTTCTTCTGGTGTTACATTCCATTCTTTACGAAATTTTAGAAGAACATCATCATTGTGATAACTCATGATATCTTCTAATGAGCTAACATTATGAACTTTTGCATAAGAACTGCTGTTCATCTTATGTTGTAGCATAACACCCCCAATTATATATTTGAATGTAGATGAGAATAGTTATCATTTGTTATGGTATTGTTAAATTTGTGCTTGTGTCAATATGCCTAATTCTATAAATGAGATAGTAATCAAGTTTTTTAATGGTTATAGGATCCATTAGTAATACAAGGTTTTTGCAGCCAGTTTTTACGGGTAGGGGCTGCAAGGAAAACAAAATTTTCCCACTCTAAGAGAAGAGAATTGAGTTGGTTGAATGAGTGGATGCATCTAGGGCCGCTAATTCACCGAGTGTAAAGGCTGTACGAAATGTGTTGCAGTCCGATAATAGCCCCCTCCATTGACGTTTTACACATGTGTTGTAGGTTCCAGGAGTGGGCGGATCTCAAAAAGATC"
        a.evaluate()
        for score in a.scores:
            self.assertEqual(int(score),5404)

    # def test_mutation(self):
    #     rot_table = RotTable()
    #     seq = "AAAGGATCTTCTTGAGATCCTTTTTTTCTGCGCGTAATCTGCTGCCAGTAAACGAAAAAACCGCCTGGGGAGGCGGTTTAGTCGAAGGTTAAGTCAGTTGGGGACTGCTTAACCGGGTAACTGGCTTGGTGGAGCACAGATACCAAATACTGTCCTTCTAGTGTAGCCGCAGTTAGGCCACCACTTCAAGAACTCTTAATATCTCAATCCACCTTGTCCAGTTACCAGTGGCTGCTGCCAGTGGCGCTTTGTCGTGTCTTACCGGGTTGGACTCAAGACGATAGTTACCGGATAAGGCGCAGCGGTCGGGCTGAACGGGGGGTTCGTGCACACAGCCCAGCTTGGAGCGAACGACCTACACCGAGCCGAGATACCTACAGCGTGAGCTATGAGAAAGCGCCACGCTTCCCGAAGGGAGAAAGGCGGACAGGTATCCGGTAAGCGGCAGGGTCGGAACAGGAGAGCGCACGAGGGAGCTTCCAGGGGGAAACGCCTGGTATCTTTATAGTCCTGTCGGGTTTCGCCACCTCTGACTTGAGCGTCGATTTTTATGATGCTCGTCAGGGGGGCGGAGCCTATGGAAAAACGCCAACGGCGCAGCCTTTTCCTGGTTCTCGTTTTTTGCTCACATGTTTCTTTTGGCGTTATCCCCTGATTCTGTGGATAACCGCATCTCCGCTTTTGAGTGAGCAGACACCGCTCGCCGCAGCCGAACGACCGAGTGTAGCGAGTCAGTGAGCGAGGAAGCGGAAGAGCGCCGGAACGTGCATTTTCTCCTTACGCATCTGTGCGGCATTTCACATCGGACATGGTGCGCTTTCCATACAATTCGTACTGATGCCGCATAGTTAAGCCAGTATACACTCCGCTATCGCTACGTGACTGGTTCAGGGCTTCGCCCCGAAACCCCCTGACGCGCCCTGAGGGGCTTGTCTGCTCCCGGCATCCGCTCACAGACAAGCTGTTACCGTCTCCGGGAGCTGTATGTGTCAGAGGTTTTCACCGTCATCCCCGAAGCGTGCGAGGCAGCTGCGGTAAAGCTCGTCGGCGTGGTCGTGAAGTGATTCACAAATATCGGCCTGTTCATCTGCGTCCAGTTCGTTGAGTTTCTCCAGCAGCGTTAATGTCTGGCTTCTGATAAAACGGGCCATGTTAAGGGCGGTTTTTTCCTGTTTAGTCACTGATGCCTCCGTGTAAGGGGGATTTCTGTTTTATGGGGTAATGATACCGATGAAACGCGAGAGGATGCTCACCATACGGGTTACTGATGATGAACATGCCCGGTTACTGGAACGCTGTGAGGGTAAACAGCTGGCGGTATGGATGCGGCGGGTCTGCCTGGGTGAGCCGGTTGCACGCTCCGGGAAGCTGCCGACACTGGCACCGCCGTTACTGCGTCAGCTGGCCGCCATCGGGAATAACCTGAATCAGACAGCGAGGAAGGTGAACAGCGGGCAGTGGTCTTCCGGTGATCGGGTTCAGGTGTTGGCTGCGCTGATGGCCATCGGGGAGGAGCTGCGTCGGCTGCGTCTGGCCGTCAGGGAACAGGGCGCGCGGGATGATTGTTAAATTTCATGCCAGGGGAAAAGGCGGTGGCAGTGGTCCGGTTGATTACCTGCTGGGAAGGGAGCGAAACCGGGAAGGGGCAACGGTGCTTCAGGGTAATCCGGAAGAAGTCCGGGAACTCATCGATGCCACGCCATTTGCGAAGAAATACACGTCAGGTGTTCTGTCGTTCGCGGAGAAGGAGCTGCCGCCGGGAGGACGTGAAAAGGTGATGGCGAGCTTTGAGCGTGTACTGATGCCCGGTCTCGAAAAGAATCAGTACAGCATCCTGTGGGTGGAGCACCAGGACAAGGGACGGCTTGAGCTGAATTTTGTCATTCCGAACATGGAGCTACAGACCGGAAAACGCCTCCAGCCGTACTACGACCGGGCAGACAGGCCGAGAATTGATGCCTGGCAGACGCTGGTGAATCACCATTACGGGCTGCATGACCCCAACGCCCCGGAGAACCGCCGGATACTGACTCTCCCTGATAACCTGCCGGAAACGAAACAGGCGCTTGCAGAGAGCGTCACACGCGGGATAGACGCTCTTTATCATGTCGGGGAGATAAAAGGTCGTCAGGATGTGATTCAGGCGCTCACAGAGGCAGGGCTTGAAGTGGTCAGGGTGATGCGAAGCAGTATCAGCATTGCAGACCCGAACGGTGGGAAGAATATCAGGCTGAAAGGAGCATTTTATGAGCAATCTTTTACAGACGGGCGCGGAGTTCGAGAAAAAGCTGAAAGAGAGAGCCGAATCTACAGAGACAATGCTGAACGACGAGTTCAGCAAGCTCGAAAAATCTGTAAGCAAGGCTGTGACATCAAACGAGACGAAAATCAAAGACGCTATAGCCCTGTTCACAGCTTCGACAGAGGAATCACTGAAAAAACACCGGGAAGGGGTGAAAGAGGCGATGATGCAGCACAGGAAGGACGTGTTAAAGCTGGCAGGGAATACGGGCATGATGTTACTGGGGATGGTCCTTTTCCTGTTTACCGTGAGTGGCGGGACGCTCTGGTATCTTGGCGGGATGATACAGGCGAACCTGGAAGAAATCAGGATACAGGAAGAAACATTGCAGAAACTGAACGCGAAGACATGGGGCGTGGAGTTTGTGCAGGACGGGAGAAGGAAATTTCTGGTTATCCCTCAGGGGAAATCGGCAACGGTGATTCCCTATCAGGGGAAGGACTGGGTACAACTGACGGAGTGACACAGAGTGACGGAGCTGGAAAGACATTTGCTGAACGCCTTAGAGCAACTGCAACAGGACTATATGCAGCGGCTGAACGAATGGGAGAGCGCCTTCGTGGAATTGCAGAAAATGTTTTCGCTTACGCAACGGGACAACGCGATGCTGAACGAGCGGGTCATGCAGTTGAGTCAGCAGGTGCAGCACTTGAGCGAGCAGACAGAACGCTTGAGCCAGTTATACAGCGAGAACAGGAGATAAGGGATGAACGGCTGATACAGGAACGCGAACATGAGTTATCCCTGGAGCGTGAGCGCCAGCTGGAAATACAGGAACGGACACAGGATGGCCCTTCGCTGGGATGGTAATCAGAGACAGGCTAAAATGTTGTCAGCGCGTTTCCGGTGCATTTTTTGGGATAATGGTTGGTTCGGGGGCACCGGGAACGCGCTTCAGTCAGACCTTGCTGAAAACACAGGAACGCGTTAAAACGCATACGGGCGCGATTCTGGTGTGTCTTTTGTTGCTGTGTTTTGCCTCTATTGCCAGATCGCGCTCATTCCCCTGAACTTCTGTTTTCCCGCTCCGGTCCCCGTCTTCTTCGCTTCCGAAAGCATGAAAAAAATCCGTTTCAGCTGTCTCTGGCTGGCAATTCCTGCGTGATTCACATGGCTGCATAGCTATGCATGTGGTTAAAATTTACCGGGTGCGATCGCGGCAGTTTTTCGGGTGGTTTGTTGCCATTTTTACCTGTCTGCTGCCGTGATCGCGCCGAACGCGTTTCAGCGGTGCGTACAATAAGGGATTATGGTAAATTATCTTGTTCCTTAGAGAATGATTTGAGGTGGTATCCTGCACTTATTTAAATATGCTTGCTTGGGAAATTCCAGGTTGCAGTATGGTTGAGTTGTAATTTTCCTATGATAGGAAAAATGTTATATTATTAATTTATTTGTGAGGCTTCATAAAGAATGAAAATTTCTGATATTGAAAAAAACATATATAAAGGACTAGCTGAATTTATTTCACAAAAAATCAGAGATGAACATGATATATGCCTTGGACAGTTTGAATCAGAGGAATTACTTGATGAGATTCTTAAAAGAGTAATCCCAGTCATATATAATGTGGCTATTGATGATGCTATAAAATCAGTAAGGAATGTTGGGGATAGATTAGAGGAGGAATTAGATATGAGGAAGGTAGTGTGACTAATTTTAAATCAGACTTAAATCTAATAAGAAAAGAATGGTATAATGCATTTTATTCAGGTAATACTGAAATGCTAGATTACTTGGAAGCTGATTGGTTTATTTCAACAAATGGTCAAAAAGTTATCTATAAAAAACATCAGTTACGAAAGATTGATATGCGTCCAGCGAGGATTTTACCTAGCATAGAAAGATATGAATATGAGGTCGTAATGCGTGAGTTTAAAGGCATTGCTTGTGTTTCAGGGAAAGCTGAAATAAAGCAAAATGATGGAAATATATTAATGGCTTTTATTGAGAATTGGATAAAGGTTAATGGTGGATGGAAAATGCAGTTTATATCGTATGAAAAAATCTAAGGGGAAGCCCCCTTAGATTAATGGTTATATATGTTCAAGTTTTATTTTTTTATAGCGATAAGTTCTGCTTTGAGCTTTAAGCATGTTTTCTGCAAACTGAATATCAAAACTATTTATAGCATTAGTTATTATAGTTTTTATTTTTTCTTTATCAGATAATGAATCACCATGCTCTATAGGTTCCCGCATATATGGATTGTTTTTTAATTCATCAAATAATGTTTTAAATAGTTCTAATCGACGAGGTCTTATAACTGTAAAAGATATATGAAGAGAGTGTTTGCTCTGAGTCGTAACATTGTGCCAGTATCCAGCAGGAAGATATATGGCCTGACCTGGGGTTATATCAAACTCATAATCTGGGGAGGTATTAGGTGGTAGATAATCGAAGCTTCTTTCATCTTCGAGAGGGTATGAATAGGTAGGGTTGTAAACTTTCCATTTTTTTATTCCCTCAATTTGAACAGCTATTACATCATGATTGTCAAAATGAAGCCCAAAGCTTGGTGTTGCTGTAAATGCAGCATATAGATTAGCACTACATGTACATTCTAACTCTTTAGATAACCATAGTCTGCTTTCATCTACAGATTCAAAGAATGACTGGCATCGATCTACTATAAGGGTTGCGCCATCACGTAAGCATTTATATAGCTGATGGCGATTTATATGTGGTGTTCTATCGCCTGTTTGGCTATATGTGTATCTTATAAATCCTTTATACCCCCTAATTTCGGGAAAGTTGTCATTTGCCATTCTAACTCTAGGATAGTGCAATATATCTTTTTCAAGCAATTTATTAAGATCATTCCAGTTGATTAAGTTTTTATAATTAACATCCGTGAATACAAACGGATATTTCTGGAAATTATATTTCTTAAATTTTTCTATGATTTCCTTTTTTATAAGATTATTCATTTTTAAACCTCATGTTTTGTGATATCTATAATCTGTGCTTTAGGTATATTATTTATAAGTTGTTCATCATGAGATATAACAATGATATGCTTTTCCTTGTTTTCCTCTTTTATATAATCACTGATTATTTTTATACCAAGTGAATCAAACCCTTTTGTCGGTTCATCGAAAATAATCAAGTCTACGTTTTTTCCAGATGTAAGAGATACTCCTAATTTTTGTTTTTGTCCACCAGATAAATTATGTCCGTAACCTTTGATCTCATAATCTAGTGGTTTGTCGAACTTAAATCTGTGTAGCAGCTTTTTAATTGTATTTAAATTATTAATGCCGGAATAATGTAATATATTTTCCTCTATAGTTCCAGGCATGAGATCTAGATCTTGAGGAACGTATAAGACATTAACAAAAGGAGAATTTGCTTTTTCTTGTTGTATCCCATTGATTTTTATTGTGTTTTCTTCTGTTGTTATATTGCCAGAGAGAATTTTTGCAATAGTTGTTTTTCCCGAACCATTCTCACCGGTTATAAAGGTAACAACGCCTTTTGTTAATATTAATTTATGGTTGAATGATTTGTTGTATATTTCAATATTGCAAATATTGTCTTTTACATGAAGATATTGCTTGTCTGTGTAATTTGTTTTTTTTATGTCGTTTATTTCGGCACAGTATAAATCAATTTCTGTTCTTGCCATTTTTATTTGTCTAAATAGATAACCAATGCGATTTAATGGGAGAAAAACTTGGAATAAAAAAGTGGCAAGCATAATAATACTACCACGGCTTGCTCTACCATGAAGAAACATCCAGTATGCTGATAGGATAATCAGACTACTAAAAATGACTGAAAGAAAAGCGGAGCTGATACCAAACAGGAAAAATTCATTATTTACTTTTCTTTGTTTTTCTGAATGTGTATTTACAGCTTGAATTACTCGTTTACGACTTTTATCCGTGGTATGGAAAGCTTTATCCATAGGATACATGTGCATCATATCAAACATTCTTCCAGATGCGAATTTGGAGCTAAGTGCAACTGATTTCATCATTGGAAATCTACGTTGTGTCATTTTTATGACAAATATTATATAGATTGCCATTATTATTATAAACTCAATGGCTATTAATGTATTAACACTTATACAAATTGTTATGATTATTCCAATCATTTGTATTAATAATGGTACTACATCAGAACATATTGTATAAAATAATGATGATGCAGAAGAAAGCATGCTTTCTATAACCTTATTTAGTTCTCCTTTATTTTTCTTTAAAAAATGCTCTTGGTGAGAATTTTGTATATTATCAATAACTTGCTCTCTAAGCTTTACAGATAATTCTATATTTGTTTTTTGAGTCAAGTATTCCGATATGCTATATCCAGCAGGCATAAGGAATCTAATTGATAAGAAACATGCTATAAATATTAATAATGAGTTTATTTCTCCTATTGAATCTTTATTGTCAATAACTGTTTTTATTAAATATCCGAATAGAACGAAAAGAAAACTACTTATAGTTGATAATAATATAATAAAAAACAAATTACATTTATTAAATGTGATGATGTACTTTTCAATAAAATTCAATTTATAATCCTTAAAGCCCGTATATTACGGGCTTTATGTTATCTAGAATTACATGAGCACCCAGCGCCACATCCTTTACCGCTGCAACCACAAACAGAACCATTATCATTCCAAACATCTTTTCGCATTATTATTTTTACAAATTCTGCGGCTGGAAGGTGAGTGATACTCTTTACTTTTTCGATGTAAGAATCACTGGATATGGATTCTTTTGGAATTCTTATAGTATTAATGTTCTTTATGCTGTATCTTACAGCATAATCACCATACCACTTTGCGACAGTTTCATGACCTAGGTAAAAAGCGATTTTTTCAATTTGATTTTTATATTCGTTAAAACGATATTCTTGGAATGTTATACCATGCTCATTAACATGCCTTATCTCATTTTTTAGCATGTCATTTGTATTTGGATAATGGTGGAGGTAAGCACCAAGATATTTTTCACAAAAGCTGGTATAAGCATCTGTAAATTGAATAAACGTATGCCACATTTCATCTATAATTTGTAATTGCTCGTGAACTTTTATATTGTAGCATTCCGTTAGGCATGTTGAGGCTAGCCAGATGAATTTCTTTGTTTCATTAAAGATATCATCAGCTTCTTCTGGTGTTACATTCCATTCTTTACGAAATTTTAGAAGAACATCATCATTGTGATAACTCATGATATCTTCTAATGAGCTAACATTATGAACTTTTGCATAAGAACTGCTGTTCATCTTATGTTGTAGCATAACACCCCCAATTATATATTTGAATGTAGATGAGAATAGTTATCATTTGTTATGGTATTGTTAAATTTGTGCTTGTGTCAATATGCCTAATTCTATAAATGAGATAGTAATCAAGTTTTTTAATGGTTATAGGATCCATTAGTAATACAAGGTTTTTGCAGCCAGTTTTTACGGGTAGGGGCTGCAAGGAAAACAAAATTTTCCCACTCTAAGAGAAGAGAATTGAGTTGGTTGAATGAGTGGATGCATCTAGGGCCGCTAATTCACCGAGTGTAAAGGCTGTACGAAATGTGTTGCAGTCCGATAATAGCCCCCTCCATTGACGTTTTACACATGTGTTGTAGGTTCCAGGAGTGGGCGGATCTCAAAAAGATC"
    #     traj = Traj3D()
    #     population_size = 10
    #     gen_algo = GeneticAlgorithm(population_size,rot_table,0.3,seq,traj,seed=1)
    #     # seed 1 makes calls (0,3,9) of random.random smaller than 0.3
    #     gen_algo_mutated = deepcopy(gen_algo)
    #     gen_algo_mutated.mutation()
    #     for i,table in enumerate(gen_algo_mutated.population):
    #         if i in (0,3,9):
    #             self.assertNotEqual(table,gen_algo.population[i])
    #         else:
    #             self.assertEqual(table,gen_algo.population[i])

    def test_selection(self):
        traj = Traj3D()
        rot_table = RotTable() #Value around 5400
        seq = "AAAGGATCTTCTTGAGATCCTTTTTTTCTGCGCGTAATCTGCTGCCAGTAAACGAAAAAACCGCCTGGGGAGGCGGTTTAGTCGAAGGTTAAGTCAGTTGGGGACTGCTTAACCGGGTAACTGGCTTGGTGGAGCACAGATACCAAATACTGTCCTTCTAGTGTAGCCGCAGTTAGGCCACCACTTCAAGAACTCTTAATATCTCAATCCACCTTGTCCAGTTACCAGTGGCTGCTGCCAGTGGCGCTTTGTCGTGTCTTACCGGGTTGGACTCAAGACGATAGTTACCGGATAAGGCGCAGCGGTCGGGCTGAACGGGGGGTTCGTGCACACAGCCCAGCTTGGAGCGAACGACCTACACCGAGCCGAGATACCTACAGCGTGAGCTATGAGAAAGCGCCACGCTTCCCGAAGGGAGAAAGGCGGACAGGTATCCGGTAAGCGGCAGGGTCGGAACAGGAGAGCGCACGAGGGAGCTTCCAGGGGGAAACGCCTGGTATCTTTATAGTCCTGTCGGGTTTCGCCACCTCTGACTTGAGCGTCGATTTTTATGATGCTCGTCAGGGGGGCGGAGCCTATGGAAAAACGCCAACGGCGCAGCCTTTTCCTGGTTCTCGTTTTTTGCTCACATGTTTCTTTTGGCGTTATCCCCTGATTCTGTGGATAACCGCATCTCCGCTTTTGAGTGAGCAGACACCGCTCGCCGCAGCCGAACGACCGAGTGTAGCGAGTCAGTGAGCGAGGAAGCGGAAGAGCGCCGGAACGTGCATTTTCTCCTTACGCATCTGTGCGGCATTTCACATCGGACATGGTGCGCTTTCCATACAATTCGTACTGATGCCGCATAGTTAAGCCAGTATACACTCCGCTATCGCTACGTGACTGGTTCAGGGCTTCGCCCCGAAACCCCCTGACGCGCCCTGAGGGGCTTGTCTGCTCCCGGCATCCGCTCACAGACAAGCTGTTACCGTCTCCGGGAGCTGTATGTGTCAGAGGTTTTCACCGTCATCCCCGAAGCGTGCGAGGCAGCTGCGGTAAAGCTCGTCGGCGTGGTCGTGAAGTGATTCACAAATATCGGCCTGTTCATCTGCGTCCAGTTCGTTGAGTTTCTCCAGCAGCGTTAATGTCTGGCTTCTGATAAAACGGGCCATGTTAAGGGCGGTTTTTTCCTGTTTAGTCACTGATGCCTCCGTGTAAGGGGGATTTCTGTTTTATGGGGTAATGATACCGATGAAACGCGAGAGGATGCTCACCATACGGGTTACTGATGATGAACATGCCCGGTTACTGGAACGCTGTGAGGGTAAACAGCTGGCGGTATGGATGCGGCGGGTCTGCCTGGGTGAGCCGGTTGCACGCTCCGGGAAGCTGCCGACACTGGCACCGCCGTTACTGCGTCAGCTGGCCGCCATCGGGAATAACCTGAATCAGACAGCGAGGAAGGTGAACAGCGGGCAGTGGTCTTCCGGTGATCGGGTTCAGGTGTTGGCTGCGCTGATGGCCATCGGGGAGGAGCTGCGTCGGCTGCGTCTGGCCGTCAGGGAACAGGGCGCGCGGGATGATTGTTAAATTTCATGCCAGGGGAAAAGGCGGTGGCAGTGGTCCGGTTGATTACCTGCTGGGAAGGGAGCGAAACCGGGAAGGGGCAACGGTGCTTCAGGGTAATCCGGAAGAAGTCCGGGAACTCATCGATGCCACGCCATTTGCGAAGAAATACACGTCAGGTGTTCTGTCGTTCGCGGAGAAGGAGCTGCCGCCGGGAGGACGTGAAAAGGTGATGGCGAGCTTTGAGCGTGTACTGATGCCCGGTCTCGAAAAGAATCAGTACAGCATCCTGTGGGTGGAGCACCAGGACAAGGGACGGCTTGAGCTGAATTTTGTCATTCCGAACATGGAGCTACAGACCGGAAAACGCCTCCAGCCGTACTACGACCGGGCAGACAGGCCGAGAATTGATGCCTGGCAGACGCTGGTGAATCACCATTACGGGCTGCATGACCCCAACGCCCCGGAGAACCGCCGGATACTGACTCTCCCTGATAACCTGCCGGAAACGAAACAGGCGCTTGCAGAGAGCGTCACACGCGGGATAGACGCTCTTTATCATGTCGGGGAGATAAAAGGTCGTCAGGATGTGATTCAGGCGCTCACAGAGGCAGGGCTTGAAGTGGTCAGGGTGATGCGAAGCAGTATCAGCATTGCAGACCCGAACGGTGGGAAGAATATCAGGCTGAAAGGAGCATTTTATGAGCAATCTTTTACAGACGGGCGCGGAGTTCGAGAAAAAGCTGAAAGAGAGAGCCGAATCTACAGAGACAATGCTGAACGACGAGTTCAGCAAGCTCGAAAAATCTGTAAGCAAGGCTGTGACATCAAACGAGACGAAAATCAAAGACGCTATAGCCCTGTTCACAGCTTCGACAGAGGAATCACTGAAAAAACACCGGGAAGGGGTGAAAGAGGCGATGATGCAGCACAGGAAGGACGTGTTAAAGCTGGCAGGGAATACGGGCATGATGTTACTGGGGATGGTCCTTTTCCTGTTTACCGTGAGTGGCGGGACGCTCTGGTATCTTGGCGGGATGATACAGGCGAACCTGGAAGAAATCAGGATACAGGAAGAAACATTGCAGAAACTGAACGCGAAGACATGGGGCGTGGAGTTTGTGCAGGACGGGAGAAGGAAATTTCTGGTTATCCCTCAGGGGAAATCGGCAACGGTGATTCCCTATCAGGGGAAGGACTGGGTACAACTGACGGAGTGACACAGAGTGACGGAGCTGGAAAGACATTTGCTGAACGCCTTAGAGCAACTGCAACAGGACTATATGCAGCGGCTGAACGAATGGGAGAGCGCCTTCGTGGAATTGCAGAAAATGTTTTCGCTTACGCAACGGGACAACGCGATGCTGAACGAGCGGGTCATGCAGTTGAGTCAGCAGGTGCAGCACTTGAGCGAGCAGACAGAACGCTTGAGCCAGTTATACAGCGAGAACAGGAGATAAGGGATGAACGGCTGATACAGGAACGCGAACATGAGTTATCCCTGGAGCGTGAGCGCCAGCTGGAAATACAGGAACGGACACAGGATGGCCCTTCGCTGGGATGGTAATCAGAGACAGGCTAAAATGTTGTCAGCGCGTTTCCGGTGCATTTTTTGGGATAATGGTTGGTTCGGGGGCACCGGGAACGCGCTTCAGTCAGACCTTGCTGAAAACACAGGAACGCGTTAAAACGCATACGGGCGCGATTCTGGTGTGTCTTTTGTTGCTGTGTTTTGCCTCTATTGCCAGATCGCGCTCATTCCCCTGAACTTCTGTTTTCCCGCTCCGGTCCCCGTCTTCTTCGCTTCCGAAAGCATGAAAAAAATCCGTTTCAGCTGTCTCTGGCTGGCAATTCCTGCGTGATTCACATGGCTGCATAGCTATGCATGTGGTTAAAATTTACCGGGTGCGATCGCGGCAGTTTTTCGGGTGGTTTGTTGCCATTTTTACCTGTCTGCTGCCGTGATCGCGCCGAACGCGTTTCAGCGGTGCGTACAATAAGGGATTATGGTAAATTATCTTGTTCCTTAGAGAATGATTTGAGGTGGTATCCTGCACTTATTTAAATATGCTTGCTTGGGAAATTCCAGGTTGCAGTATGGTTGAGTTGTAATTTTCCTATGATAGGAAAAATGTTATATTATTAATTTATTTGTGAGGCTTCATAAAGAATGAAAATTTCTGATATTGAAAAAAACATATATAAAGGACTAGCTGAATTTATTTCACAAAAAATCAGAGATGAACATGATATATGCCTTGGACAGTTTGAATCAGAGGAATTACTTGATGAGATTCTTAAAAGAGTAATCCCAGTCATATATAATGTGGCTATTGATGATGCTATAAAATCAGTAAGGAATGTTGGGGATAGATTAGAGGAGGAATTAGATATGAGGAAGGTAGTGTGACTAATTTTAAATCAGACTTAAATCTAATAAGAAAAGAATGGTATAATGCATTTTATTCAGGTAATACTGAAATGCTAGATTACTTGGAAGCTGATTGGTTTATTTCAACAAATGGTCAAAAAGTTATCTATAAAAAACATCAGTTACGAAAGATTGATATGCGTCCAGCGAGGATTTTACCTAGCATAGAAAGATATGAATATGAGGTCGTAATGCGTGAGTTTAAAGGCATTGCTTGTGTTTCAGGGAAAGCTGAAATAAAGCAAAATGATGGAAATATATTAATGGCTTTTATTGAGAATTGGATAAAGGTTAATGGTGGATGGAAAATGCAGTTTATATCGTATGAAAAAATCTAAGGGGAAGCCCCCTTAGATTAATGGTTATATATGTTCAAGTTTTATTTTTTTATAGCGATAAGTTCTGCTTTGAGCTTTAAGCATGTTTTCTGCAAACTGAATATCAAAACTATTTATAGCATTAGTTATTATAGTTTTTATTTTTTCTTTATCAGATAATGAATCACCATGCTCTATAGGTTCCCGCATATATGGATTGTTTTTTAATTCATCAAATAATGTTTTAAATAGTTCTAATCGACGAGGTCTTATAACTGTAAAAGATATATGAAGAGAGTGTTTGCTCTGAGTCGTAACATTGTGCCAGTATCCAGCAGGAAGATATATGGCCTGACCTGGGGTTATATCAAACTCATAATCTGGGGAGGTATTAGGTGGTAGATAATCGAAGCTTCTTTCATCTTCGAGAGGGTATGAATAGGTAGGGTTGTAAACTTTCCATTTTTTTATTCCCTCAATTTGAACAGCTATTACATCATGATTGTCAAAATGAAGCCCAAAGCTTGGTGTTGCTGTAAATGCAGCATATAGATTAGCACTACATGTACATTCTAACTCTTTAGATAACCATAGTCTGCTTTCATCTACAGATTCAAAGAATGACTGGCATCGATCTACTATAAGGGTTGCGCCATCACGTAAGCATTTATATAGCTGATGGCGATTTATATGTGGTGTTCTATCGCCTGTTTGGCTATATGTGTATCTTATAAATCCTTTATACCCCCTAATTTCGGGAAAGTTGTCATTTGCCATTCTAACTCTAGGATAGTGCAATATATCTTTTTCAAGCAATTTATTAAGATCATTCCAGTTGATTAAGTTTTTATAATTAACATCCGTGAATACAAACGGATATTTCTGGAAATTATATTTCTTAAATTTTTCTATGATTTCCTTTTTTATAAGATTATTCATTTTTAAACCTCATGTTTTGTGATATCTATAATCTGTGCTTTAGGTATATTATTTATAAGTTGTTCATCATGAGATATAACAATGATATGCTTTTCCTTGTTTTCCTCTTTTATATAATCACTGATTATTTTTATACCAAGTGAATCAAACCCTTTTGTCGGTTCATCGAAAATAATCAAGTCTACGTTTTTTCCAGATGTAAGAGATACTCCTAATTTTTGTTTTTGTCCACCAGATAAATTATGTCCGTAACCTTTGATCTCATAATCTAGTGGTTTGTCGAACTTAAATCTGTGTAGCAGCTTTTTAATTGTATTTAAATTATTAATGCCGGAATAATGTAATATATTTTCCTCTATAGTTCCAGGCATGAGATCTAGATCTTGAGGAACGTATAAGACATTAACAAAAGGAGAATTTGCTTTTTCTTGTTGTATCCCATTGATTTTTATTGTGTTTTCTTCTGTTGTTATATTGCCAGAGAGAATTTTTGCAATAGTTGTTTTTCCCGAACCATTCTCACCGGTTATAAAGGTAACAACGCCTTTTGTTAATATTAATTTATGGTTGAATGATTTGTTGTATATTTCAATATTGCAAATATTGTCTTTTACATGAAGATATTGCTTGTCTGTGTAATTTGTTTTTTTTATGTCGTTTATTTCGGCACAGTATAAATCAATTTCTGTTCTTGCCATTTTTATTTGTCTAAATAGATAACCAATGCGATTTAATGGGAGAAAAACTTGGAATAAAAAAGTGGCAAGCATAATAATACTACCACGGCTTGCTCTACCATGAAGAAACATCCAGTATGCTGATAGGATAATCAGACTACTAAAAATGACTGAAAGAAAAGCGGAGCTGATACCAAACAGGAAAAATTCATTATTTACTTTTCTTTGTTTTTCTGAATGTGTATTTACAGCTTGAATTACTCGTTTACGACTTTTATCCGTGGTATGGAAAGCTTTATCCATAGGATACATGTGCATCATATCAAACATTCTTCCAGATGCGAATTTGGAGCTAAGTGCAACTGATTTCATCATTGGAAATCTACGTTGTGTCATTTTTATGACAAATATTATATAGATTGCCATTATTATTATAAACTCAATGGCTATTAATGTATTAACACTTATACAAATTGTTATGATTATTCCAATCATTTGTATTAATAATGGTACTACATCAGAACATATTGTATAAAATAATGATGATGCAGAAGAAAGCATGCTTTCTATAACCTTATTTAGTTCTCCTTTATTTTTCTTTAAAAAATGCTCTTGGTGAGAATTTTGTATATTATCAATAACTTGCTCTCTAAGCTTTACAGATAATTCTATATTTGTTTTTTGAGTCAAGTATTCCGATATGCTATATCCAGCAGGCATAAGGAATCTAATTGATAAGAAACATGCTATAAATATTAATAATGAGTTTATTTCTCCTATTGAATCTTTATTGTCAATAACTGTTTTTATTAAATATCCGAATAGAACGAAAAGAAAACTACTTATAGTTGATAATAATATAATAAAAAACAAATTACATTTATTAAATGTGATGATGTACTTTTCAATAAAATTCAATTTATAATCCTTAAAGCCCGTATATTACGGGCTTTATGTTATCTAGAATTACATGAGCACCCAGCGCCACATCCTTTACCGCTGCAACCACAAACAGAACCATTATCATTCCAAACATCTTTTCGCATTATTATTTTTACAAATTCTGCGGCTGGAAGGTGAGTGATACTCTTTACTTTTTCGATGTAAGAATCACTGGATATGGATTCTTTTGGAATTCTTATAGTATTAATGTTCTTTATGCTGTATCTTACAGCATAATCACCATACCACTTTGCGACAGTTTCATGACCTAGGTAAAAAGCGATTTTTTCAATTTGATTTTTATATTCGTTAAAACGATATTCTTGGAATGTTATACCATGCTCATTAACATGCCTTATCTCATTTTTTAGCATGTCATTTGTATTTGGATAATGGTGGAGGTAAGCACCAAGATATTTTTCACAAAAGCTGGTATAAGCATCTGTAAATTGAATAAACGTATGCCACATTTCATCTATAATTTGTAATTGCTCGTGAACTTTTATATTGTAGCATTCCGTTAGGCATGTTGAGGCTAGCCAGATGAATTTCTTTGTTTCATTAAAGATATCATCAGCTTCTTCTGGTGTTACATTCCATTCTTTACGAAATTTTAGAAGAACATCATCATTGTGATAACTCATGATATCTTCTAATGAGCTAACATTATGAACTTTTGCATAAGAACTGCTGTTCATCTTATGTTGTAGCATAACACCCCCAATTATATATTTGAATGTAGATGAGAATAGTTATCATTTGTTATGGTATTGTTAAATTTGTGCTTGTGTCAATATGCCTAATTCTATAAATGAGATAGTAATCAAGTTTTTTAATGGTTATAGGATCCATTAGTAATACAAGGTTTTTGCAGCCAGTTTTTACGGGTAGGGGCTGCAAGGAAAACAAAATTTTCCCACTCTAAGAGAAGAGAATTGAGTTGGTTGAATGAGTGGATGCATCTAGGGCCGCTAATTCACCGAGTGTAAAGGCTGTACGAAATGTGTTGCAGTCCGATAATAGCCCCCTCCATTGACGTTTTACACATGTGTTGTAGGTTCCAGGAGTGGGCGGATCTCAAAAAGATC"
        a = GeneticAlgorithm(2,rot_table,0.1, seq, traj)
        rot_table2 = RotTable()
        rot_table2.setTwist("AA",rot_table.getTwist("AA")+1) #Value around 2200 score
        a.population = [rot_table,rot_table2]
        a.selection()
        self.assertEqual(len(a.population),1)
        for table in a.population:
            dunecleotide_list = ["AA","AC","AG","AT","CA","CC","CG","CT","GA","GC","GG","GT","TA","TC","TG","TT"]
            for dunecleotide in dunecleotide_list:
                self.assertEqual(table.getTwist(dunecleotide),rot_table2.getTwist(dunecleotide))
                self.assertEqual(table.getWedge(dunecleotide),rot_table2.getWedge(dunecleotide))
                self.assertEqual(table.getDirection(dunecleotide),rot_table2.getDirection(dunecleotide))


    def test_get_results(self):
        traj = Traj3D()
        rot_table = RotTable() #Value around 5400
        seq = "AAAGGATCTTCTTGAGATCCTTTTTTTCTGCGCGTAATCTGCTGCCAGTAAACGAAAAAACCGCCTGGGGAGGCGGTTTAGTCGAAGGTTAAGTCAGTTGGGGACTGCTTAACCGGGTAACTGGCTTGGTGGAGCACAGATACCAAATACTGTCCTTCTAGTGTAGCCGCAGTTAGGCCACCACTTCAAGAACTCTTAATATCTCAATCCACCTTGTCCAGTTACCAGTGGCTGCTGCCAGTGGCGCTTTGTCGTGTCTTACCGGGTTGGACTCAAGACGATAGTTACCGGATAAGGCGCAGCGGTCGGGCTGAACGGGGGGTTCGTGCACACAGCCCAGCTTGGAGCGAACGACCTACACCGAGCCGAGATACCTACAGCGTGAGCTATGAGAAAGCGCCACGCTTCCCGAAGGGAGAAAGGCGGACAGGTATCCGGTAAGCGGCAGGGTCGGAACAGGAGAGCGCACGAGGGAGCTTCCAGGGGGAAACGCCTGGTATCTTTATAGTCCTGTCGGGTTTCGCCACCTCTGACTTGAGCGTCGATTTTTATGATGCTCGTCAGGGGGGCGGAGCCTATGGAAAAACGCCAACGGCGCAGCCTTTTCCTGGTTCTCGTTTTTTGCTCACATGTTTCTTTTGGCGTTATCCCCTGATTCTGTGGATAACCGCATCTCCGCTTTTGAGTGAGCAGACACCGCTCGCCGCAGCCGAACGACCGAGTGTAGCGAGTCAGTGAGCGAGGAAGCGGAAGAGCGCCGGAACGTGCATTTTCTCCTTACGCATCTGTGCGGCATTTCACATCGGACATGGTGCGCTTTCCATACAATTCGTACTGATGCCGCATAGTTAAGCCAGTATACACTCCGCTATCGCTACGTGACTGGTTCAGGGCTTCGCCCCGAAACCCCCTGACGCGCCCTGAGGGGCTTGTCTGCTCCCGGCATCCGCTCACAGACAAGCTGTTACCGTCTCCGGGAGCTGTATGTGTCAGAGGTTTTCACCGTCATCCCCGAAGCGTGCGAGGCAGCTGCGGTAAAGCTCGTCGGCGTGGTCGTGAAGTGATTCACAAATATCGGCCTGTTCATCTGCGTCCAGTTCGTTGAGTTTCTCCAGCAGCGTTAATGTCTGGCTTCTGATAAAACGGGCCATGTTAAGGGCGGTTTTTTCCTGTTTAGTCACTGATGCCTCCGTGTAAGGGGGATTTCTGTTTTATGGGGTAATGATACCGATGAAACGCGAGAGGATGCTCACCATACGGGTTACTGATGATGAACATGCCCGGTTACTGGAACGCTGTGAGGGTAAACAGCTGGCGGTATGGATGCGGCGGGTCTGCCTGGGTGAGCCGGTTGCACGCTCCGGGAAGCTGCCGACACTGGCACCGCCGTTACTGCGTCAGCTGGCCGCCATCGGGAATAACCTGAATCAGACAGCGAGGAAGGTGAACAGCGGGCAGTGGTCTTCCGGTGATCGGGTTCAGGTGTTGGCTGCGCTGATGGCCATCGGGGAGGAGCTGCGTCGGCTGCGTCTGGCCGTCAGGGAACAGGGCGCGCGGGATGATTGTTAAATTTCATGCCAGGGGAAAAGGCGGTGGCAGTGGTCCGGTTGATTACCTGCTGGGAAGGGAGCGAAACCGGGAAGGGGCAACGGTGCTTCAGGGTAATCCGGAAGAAGTCCGGGAACTCATCGATGCCACGCCATTTGCGAAGAAATACACGTCAGGTGTTCTGTCGTTCGCGGAGAAGGAGCTGCCGCCGGGAGGACGTGAAAAGGTGATGGCGAGCTTTGAGCGTGTACTGATGCCCGGTCTCGAAAAGAATCAGTACAGCATCCTGTGGGTGGAGCACCAGGACAAGGGACGGCTTGAGCTGAATTTTGTCATTCCGAACATGGAGCTACAGACCGGAAAACGCCTCCAGCCGTACTACGACCGGGCAGACAGGCCGAGAATTGATGCCTGGCAGACGCTGGTGAATCACCATTACGGGCTGCATGACCCCAACGCCCCGGAGAACCGCCGGATACTGACTCTCCCTGATAACCTGCCGGAAACGAAACAGGCGCTTGCAGAGAGCGTCACACGCGGGATAGACGCTCTTTATCATGTCGGGGAGATAAAAGGTCGTCAGGATGTGATTCAGGCGCTCACAGAGGCAGGGCTTGAAGTGGTCAGGGTGATGCGAAGCAGTATCAGCATTGCAGACCCGAACGGTGGGAAGAATATCAGGCTGAAAGGAGCATTTTATGAGCAATCTTTTACAGACGGGCGCGGAGTTCGAGAAAAAGCTGAAAGAGAGAGCCGAATCTACAGAGACAATGCTGAACGACGAGTTCAGCAAGCTCGAAAAATCTGTAAGCAAGGCTGTGACATCAAACGAGACGAAAATCAAAGACGCTATAGCCCTGTTCACAGCTTCGACAGAGGAATCACTGAAAAAACACCGGGAAGGGGTGAAAGAGGCGATGATGCAGCACAGGAAGGACGTGTTAAAGCTGGCAGGGAATACGGGCATGATGTTACTGGGGATGGTCCTTTTCCTGTTTACCGTGAGTGGCGGGACGCTCTGGTATCTTGGCGGGATGATACAGGCGAACCTGGAAGAAATCAGGATACAGGAAGAAACATTGCAGAAACTGAACGCGAAGACATGGGGCGTGGAGTTTGTGCAGGACGGGAGAAGGAAATTTCTGGTTATCCCTCAGGGGAAATCGGCAACGGTGATTCCCTATCAGGGGAAGGACTGGGTACAACTGACGGAGTGACACAGAGTGACGGAGCTGGAAAGACATTTGCTGAACGCCTTAGAGCAACTGCAACAGGACTATATGCAGCGGCTGAACGAATGGGAGAGCGCCTTCGTGGAATTGCAGAAAATGTTTTCGCTTACGCAACGGGACAACGCGATGCTGAACGAGCGGGTCATGCAGTTGAGTCAGCAGGTGCAGCACTTGAGCGAGCAGACAGAACGCTTGAGCCAGTTATACAGCGAGAACAGGAGATAAGGGATGAACGGCTGATACAGGAACGCGAACATGAGTTATCCCTGGAGCGTGAGCGCCAGCTGGAAATACAGGAACGGACACAGGATGGCCCTTCGCTGGGATGGTAATCAGAGACAGGCTAAAATGTTGTCAGCGCGTTTCCGGTGCATTTTTTGGGATAATGGTTGGTTCGGGGGCACCGGGAACGCGCTTCAGTCAGACCTTGCTGAAAACACAGGAACGCGTTAAAACGCATACGGGCGCGATTCTGGTGTGTCTTTTGTTGCTGTGTTTTGCCTCTATTGCCAGATCGCGCTCATTCCCCTGAACTTCTGTTTTCCCGCTCCGGTCCCCGTCTTCTTCGCTTCCGAAAGCATGAAAAAAATCCGTTTCAGCTGTCTCTGGCTGGCAATTCCTGCGTGATTCACATGGCTGCATAGCTATGCATGTGGTTAAAATTTACCGGGTGCGATCGCGGCAGTTTTTCGGGTGGTTTGTTGCCATTTTTACCTGTCTGCTGCCGTGATCGCGCCGAACGCGTTTCAGCGGTGCGTACAATAAGGGATTATGGTAAATTATCTTGTTCCTTAGAGAATGATTTGAGGTGGTATCCTGCACTTATTTAAATATGCTTGCTTGGGAAATTCCAGGTTGCAGTATGGTTGAGTTGTAATTTTCCTATGATAGGAAAAATGTTATATTATTAATTTATTTGTGAGGCTTCATAAAGAATGAAAATTTCTGATATTGAAAAAAACATATATAAAGGACTAGCTGAATTTATTTCACAAAAAATCAGAGATGAACATGATATATGCCTTGGACAGTTTGAATCAGAGGAATTACTTGATGAGATTCTTAAAAGAGTAATCCCAGTCATATATAATGTGGCTATTGATGATGCTATAAAATCAGTAAGGAATGTTGGGGATAGATTAGAGGAGGAATTAGATATGAGGAAGGTAGTGTGACTAATTTTAAATCAGACTTAAATCTAATAAGAAAAGAATGGTATAATGCATTTTATTCAGGTAATACTGAAATGCTAGATTACTTGGAAGCTGATTGGTTTATTTCAACAAATGGTCAAAAAGTTATCTATAAAAAACATCAGTTACGAAAGATTGATATGCGTCCAGCGAGGATTTTACCTAGCATAGAAAGATATGAATATGAGGTCGTAATGCGTGAGTTTAAAGGCATTGCTTGTGTTTCAGGGAAAGCTGAAATAAAGCAAAATGATGGAAATATATTAATGGCTTTTATTGAGAATTGGATAAAGGTTAATGGTGGATGGAAAATGCAGTTTATATCGTATGAAAAAATCTAAGGGGAAGCCCCCTTAGATTAATGGTTATATATGTTCAAGTTTTATTTTTTTATAGCGATAAGTTCTGCTTTGAGCTTTAAGCATGTTTTCTGCAAACTGAATATCAAAACTATTTATAGCATTAGTTATTATAGTTTTTATTTTTTCTTTATCAGATAATGAATCACCATGCTCTATAGGTTCCCGCATATATGGATTGTTTTTTAATTCATCAAATAATGTTTTAAATAGTTCTAATCGACGAGGTCTTATAACTGTAAAAGATATATGAAGAGAGTGTTTGCTCTGAGTCGTAACATTGTGCCAGTATCCAGCAGGAAGATATATGGCCTGACCTGGGGTTATATCAAACTCATAATCTGGGGAGGTATTAGGTGGTAGATAATCGAAGCTTCTTTCATCTTCGAGAGGGTATGAATAGGTAGGGTTGTAAACTTTCCATTTTTTTATTCCCTCAATTTGAACAGCTATTACATCATGATTGTCAAAATGAAGCCCAAAGCTTGGTGTTGCTGTAAATGCAGCATATAGATTAGCACTACATGTACATTCTAACTCTTTAGATAACCATAGTCTGCTTTCATCTACAGATTCAAAGAATGACTGGCATCGATCTACTATAAGGGTTGCGCCATCACGTAAGCATTTATATAGCTGATGGCGATTTATATGTGGTGTTCTATCGCCTGTTTGGCTATATGTGTATCTTATAAATCCTTTATACCCCCTAATTTCGGGAAAGTTGTCATTTGCCATTCTAACTCTAGGATAGTGCAATATATCTTTTTCAAGCAATTTATTAAGATCATTCCAGTTGATTAAGTTTTTATAATTAACATCCGTGAATACAAACGGATATTTCTGGAAATTATATTTCTTAAATTTTTCTATGATTTCCTTTTTTATAAGATTATTCATTTTTAAACCTCATGTTTTGTGATATCTATAATCTGTGCTTTAGGTATATTATTTATAAGTTGTTCATCATGAGATATAACAATGATATGCTTTTCCTTGTTTTCCTCTTTTATATAATCACTGATTATTTTTATACCAAGTGAATCAAACCCTTTTGTCGGTTCATCGAAAATAATCAAGTCTACGTTTTTTCCAGATGTAAGAGATACTCCTAATTTTTGTTTTTGTCCACCAGATAAATTATGTCCGTAACCTTTGATCTCATAATCTAGTGGTTTGTCGAACTTAAATCTGTGTAGCAGCTTTTTAATTGTATTTAAATTATTAATGCCGGAATAATGTAATATATTTTCCTCTATAGTTCCAGGCATGAGATCTAGATCTTGAGGAACGTATAAGACATTAACAAAAGGAGAATTTGCTTTTTCTTGTTGTATCCCATTGATTTTTATTGTGTTTTCTTCTGTTGTTATATTGCCAGAGAGAATTTTTGCAATAGTTGTTTTTCCCGAACCATTCTCACCGGTTATAAAGGTAACAACGCCTTTTGTTAATATTAATTTATGGTTGAATGATTTGTTGTATATTTCAATATTGCAAATATTGTCTTTTACATGAAGATATTGCTTGTCTGTGTAATTTGTTTTTTTTATGTCGTTTATTTCGGCACAGTATAAATCAATTTCTGTTCTTGCCATTTTTATTTGTCTAAATAGATAACCAATGCGATTTAATGGGAGAAAAACTTGGAATAAAAAAGTGGCAAGCATAATAATACTACCACGGCTTGCTCTACCATGAAGAAACATCCAGTATGCTGATAGGATAATCAGACTACTAAAAATGACTGAAAGAAAAGCGGAGCTGATACCAAACAGGAAAAATTCATTATTTACTTTTCTTTGTTTTTCTGAATGTGTATTTACAGCTTGAATTACTCGTTTACGACTTTTATCCGTGGTATGGAAAGCTTTATCCATAGGATACATGTGCATCATATCAAACATTCTTCCAGATGCGAATTTGGAGCTAAGTGCAACTGATTTCATCATTGGAAATCTACGTTGTGTCATTTTTATGACAAATATTATATAGATTGCCATTATTATTATAAACTCAATGGCTATTAATGTATTAACACTTATACAAATTGTTATGATTATTCCAATCATTTGTATTAATAATGGTACTACATCAGAACATATTGTATAAAATAATGATGATGCAGAAGAAAGCATGCTTTCTATAACCTTATTTAGTTCTCCTTTATTTTTCTTTAAAAAATGCTCTTGGTGAGAATTTTGTATATTATCAATAACTTGCTCTCTAAGCTTTACAGATAATTCTATATTTGTTTTTTGAGTCAAGTATTCCGATATGCTATATCCAGCAGGCATAAGGAATCTAATTGATAAGAAACATGCTATAAATATTAATAATGAGTTTATTTCTCCTATTGAATCTTTATTGTCAATAACTGTTTTTATTAAATATCCGAATAGAACGAAAAGAAAACTACTTATAGTTGATAATAATATAATAAAAAACAAATTACATTTATTAAATGTGATGATGTACTTTTCAATAAAATTCAATTTATAATCCTTAAAGCCCGTATATTACGGGCTTTATGTTATCTAGAATTACATGAGCACCCAGCGCCACATCCTTTACCGCTGCAACCACAAACAGAACCATTATCATTCCAAACATCTTTTCGCATTATTATTTTTACAAATTCTGCGGCTGGAAGGTGAGTGATACTCTTTACTTTTTCGATGTAAGAATCACTGGATATGGATTCTTTTGGAATTCTTATAGTATTAATGTTCTTTATGCTGTATCTTACAGCATAATCACCATACCACTTTGCGACAGTTTCATGACCTAGGTAAAAAGCGATTTTTTCAATTTGATTTTTATATTCGTTAAAACGATATTCTTGGAATGTTATACCATGCTCATTAACATGCCTTATCTCATTTTTTAGCATGTCATTTGTATTTGGATAATGGTGGAGGTAAGCACCAAGATATTTTTCACAAAAGCTGGTATAAGCATCTGTAAATTGAATAAACGTATGCCACATTTCATCTATAATTTGTAATTGCTCGTGAACTTTTATATTGTAGCATTCCGTTAGGCATGTTGAGGCTAGCCAGATGAATTTCTTTGTTTCATTAAAGATATCATCAGCTTCTTCTGGTGTTACATTCCATTCTTTACGAAATTTTAGAAGAACATCATCATTGTGATAACTCATGATATCTTCTAATGAGCTAACATTATGAACTTTTGCATAAGAACTGCTGTTCATCTTATGTTGTAGCATAACACCCCCAATTATATATTTGAATGTAGATGAGAATAGTTATCATTTGTTATGGTATTGTTAAATTTGTGCTTGTGTCAATATGCCTAATTCTATAAATGAGATAGTAATCAAGTTTTTTAATGGTTATAGGATCCATTAGTAATACAAGGTTTTTGCAGCCAGTTTTTACGGGTAGGGGCTGCAAGGAAAACAAAATTTTCCCACTCTAAGAGAAGAGAATTGAGTTGGTTGAATGAGTGGATGCATCTAGGGCCGCTAATTCACCGAGTGTAAAGGCTGTACGAAATGTGTTGCAGTCCGATAATAGCCCCCTCCATTGACGTTTTACACATGTGTTGTAGGTTCCAGGAGTGGGCGGATCTCAAAAAGATC"
        #Sequence coresponding to plasmid_8k.fasta
        a = GeneticAlgorithm(2,rot_table,0.1,seq,traj)
        rot_table2 = RotTable()
        rot_table2.setTwist("AA",rot_table.getTwist("AA")+1) #Value around 2200 score
        a.population = [rot_table,rot_table2]
        table,_ = a.get_results()
        dunecleotide_list = ["AA","AC","AG","AT","CA","CC","CG","CT","GA","GC","GG","GT","TA","TC","TG","TT"]
        for dunecleotide in dunecleotide_list:
            self.assertEqual(table.getTwist(dunecleotide),rot_table2.getTwist(dunecleotide))
            self.assertEqual(table.getWedge(dunecleotide),rot_table2.getWedge(dunecleotide))
            self.assertEqual(table.getDirection(dunecleotide),rot_table2.getDirection(dunecleotide))


class TestGeneticAlgorithmFuncs(unittest.TestCase):
    def test_symmetrize_table(self):
        rot_table = RotTable()
        non_symmetric_table = rot_table.getNonSymmetric()
        for i, dinucleotide in enumerate(non_symmetric_table):
            rot_table.setTwist(dinucleotide,i)
            rot_table.setWedge(dinucleotide,i)
            rot_table.setDirection(dinucleotide,i)
        
        rot_table = symmetrizeTable(rot_table)
        rot_table2 = RotTable('tests/testtable.json')
        
        self.assertEqual(rot_table,rot_table2)


    def test_uniform_randomize(self):
        dunecleotide_list = ["AA","AC","AG","AT","CA","CC","CG","CT","GA","GC","GG","GT","TA","TC","TG","TT"]
        table = RotTable()
        random_table = uniform_randomize(table,1)
        table = RotTable('tests/random.json')
        for dunecleotide in dunecleotide_list:
            self.assertEqual(table.getTwist(dunecleotide),random_table.getTwist(dunecleotide))
            self.assertEqual(table.getWedge(dunecleotide),random_table.getWedge(dunecleotide))
            self.assertEqual(table.getDirection(dunecleotide),random_table.getDirection(dunecleotide))


    def test_simple_crossover(self):
        parent1 = RotTable()
        parent2 = RotTable('tests/testtable.json')
        child1, child2 = simple_crossover(parent1, parent2, seed=1)
        child1_assert = {
    "AA": [0     , 0   ,    0 ,      0.06 ,  0.6   , 0],
    "AC": [1     , 1   ,    1 ,      1.3  ,  5     , 0],
    "AG": [2     , 2   ,    2 ,      1.5  ,  3     , 0],
    "AT": [31.5  , 2.6 ,    0 ,      1.1  ,  2     , 0],
    "CA": [34.5  , 3.5 ,  -64 ,      0.9  , 34     , 0],
    "CC": [33.67 , 2.1 ,  -57 ,      0.07 ,  2.1   , 0],
    "CG": [29.8  , 6.7 ,    0 ,      1.1  ,  1.5   , 0],
    "CT": [2     , 2   ,   -2 ,      1.5  ,  3     , 0],
    "GA": [36.9  , 5.3 ,  120 ,      0.9  ,  6     , 0],
    "GC": [40    , 5   ,  180 ,      1.2  ,  1.275 , 0],
    "GG": [33.67 , 2.1 ,   57 ,      0.07 ,  2.1   , 0],
    "GT": [1     , 1   ,   -1 ,      1.3  ,  5     , 0],
    "TA": [36    , 0.9 ,    0 ,      1.1  ,  2     , 0],
    "TC": [36.9  , 5.3 , -120 ,      0.9  ,  6     , 0],
    "TG": [34.5  , 3.5 ,   64 ,      0.9  , 34     , 0],
    "TT": [0     , 0   ,    0 ,      0.06 ,  0.6   , 0]
    }
        
        child2_assert = {
    "AA": [35.62 , 7.2 , -154 ,      0.06 ,  0.6   , 0],
    "AC": [34.4  , 1.1 ,  143 ,      1.3  ,  5     , 0],
    "AG": [27.7  , 8.4 ,    2 ,      1.5  ,  3     , 0],
    "AT": [6     , 6   ,    6 ,      1.1  ,  2     , 0],
    "CA": [3     , 3   ,    3 ,      0.9  , 34     , 0],
    "CC": [4     , 4   ,    4 ,      0.07 ,  2.1   , 0],
    "CG": [8     , 8   ,    8 ,      1.1  ,  1.5   , 0],
    "CT": [27.7  , 8.4 ,   -2 ,      1.5  ,  3     , 0],
    "GA": [5     , 5   ,    5 ,      0.9  ,  6     , 0],
    "GC": [7     , 7   ,    7 ,      1.2  ,  1.275 , 0],
    "GG": [4     , 4   ,   -4 ,      0.07 ,  2.1   , 0],
    "GT": [34.4  , 1.1 , -143 ,      1.3  ,  5     , 0],
    "TA": [9     , 9   ,    9 ,      1.1  ,  2     , 0],
    "TC": [5     , 5   ,   -5 ,      0.9  ,  6     , 0],
    "TG": [3     , 3   ,   -3 ,      0.9  , 34     , 0],
    "TT": [35.62 , 7.2 ,  154 ,      0.06 ,  0.6   , 0]
    }   
        self.assertEqual(child1.getTable(), child1_assert)
        self.assertEqual(child2.getTable(), child2_assert)
        
    
    def test_double_crossover(self):
        parent1 = RotTable()
        parent2 = RotTable('tests/testtable.json')
        child1, child2 = double_crossover(parent1, parent2, seed=1)

        child1_assert = {
    "AA": [0     , 0   ,    0 ,      0.06 ,  0.6   , 0],
    "AC": [1     , 1   ,    1 ,      1.3  ,  5     , 0],
    "AG": [27.7  , 8.4 ,    2 ,      1.5  ,  3     , 0],
    "AT": [6     , 6   ,    6 ,      1.1  ,  2     , 0],
    "CA": [3     , 3   ,    3 ,      0.9  , 34     , 0],
    "CC": [4     , 4   ,    4 ,      0.07 ,  2.1   , 0],
    "CG": [8     , 8   ,    8 ,      1.1  ,  1.5   , 0],
    "CT": [27.7  , 8.4 ,   -2 ,      1.5  ,  3     , 0],
    "GA": [5     , 5   ,    5 ,      0.9  ,  6     , 0],
    "GC": [7     , 7   ,    7 ,      1.2  ,  1.275 , 0],
    "GG": [4     , 4   ,   -4 ,      0.07 ,  2.1   , 0],
    "GT": [1     , 1   ,   -1 ,      1.3  ,  5     , 0],
    "TA": [9     , 9   ,    9 ,      1.1  ,  2     , 0],
    "TC": [5     , 5   ,   -5 ,      0.9  ,  6     , 0],
    "TG": [3     , 3   ,   -3 ,      0.9  , 34     , 0],
    "TT": [0     , 0   ,    0 ,      0.06 ,  0.6   , 0]
}
        
        child2_assert = {
    "AA": [35.62 , 7.2 , -154 ,      0.06 ,  0.6   , 0],
    "AC": [34.4  , 1.1 ,  143 ,      1.3  ,  5     , 0],
    "AG": [2     , 2   ,    2 ,      1.5  ,  3     , 0],
    "AT": [31.5  , 2.6 ,    0 ,      1.1  ,  2     , 0],
    "CA": [34.5  , 3.5 ,  -64 ,      0.9  , 34     , 0],
    "CC": [33.67 , 2.1 ,  -57 ,      0.07 ,  2.1   , 0],
    "CG": [29.8  , 6.7 ,    0 ,      1.1  ,  1.5   , 0],
    "CT": [2     , 2   ,   -2 ,      1.5  ,  3     , 0],
    "GA": [36.9  , 5.3 ,  120 ,      0.9  ,  6     , 0],
    "GC": [40    , 5   ,  180 ,      1.2  ,  1.275 , 0],
    "GG": [33.67 , 2.1 ,   57 ,      0.07 ,  2.1   , 0],
    "GT": [34.4  , 1.1 , -143 ,      1.3  ,  5     , 0],
    "TA": [36    , 0.9 ,    0 ,      1.1  ,  2     , 0],
    "TC": [36.9  , 5.3 , -120 ,      0.9  ,  6     , 0],
    "TG": [34.5  , 3.5 ,   64 ,      0.9  , 34     , 0],
    "TT": [35.62 , 7.2 ,  154 ,      0.06 ,  0.6   , 0]
}

        self.assertEqual(child1.getTable(), child1_assert)
        self.assertEqual(child2.getTable(), child2_assert)

    def test_mutate(self):
        dunecleotide_list = ["AA","AC","AG","AT","CA","CC","CG","CT","GA","GC","GG","GT","TA","TC","TG","TT"]
        table = RotTable()
        random_table = mutate(table,1) #We select TA and random.randint return 0, random.gauss returns 0.8255057689055236
        table = RotTable('tests/random_mutate.json')
        for dunecleotide in dunecleotide_list:
            self.assertEqual(table.getTwist(dunecleotide),random_table.getTwist(dunecleotide))
            self.assertEqual(table.getWedge(dunecleotide),random_table.getWedge(dunecleotide))
            self.assertEqual(table.getDirection(dunecleotide),random_table.getDirection(dunecleotide))  
    


if __name__ == '__main__':
    unittest.main()
